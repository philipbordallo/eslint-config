// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESLint es6 should fail 1`] = `
Array [
  Object {
    "column": 19,
    "fix": Object {
      "range": Array [
        38,
        59,
      ],
      "text": "'hello'",
    },
    "line": 2,
    "message": "Unexpected block statement surrounding arrow body; move the returned value immediately after the \`=>\`.",
    "messageId": "unexpectedSingleBlock",
    "nodeType": "ArrowFunctionExpression",
    "ruleId": "arrow-body-style",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 15,
    "endLine": 8,
    "fix": Object {
      "range": Array [
        86,
        93,
      ],
      "text": "value",
    },
    "line": 8,
    "message": "Unexpected parentheses around single function argument having a body with no curly braces.",
    "messageId": "unexpectedParensInline",
    "nodeType": "ArrowFunctionExpression",
    "ruleId": "arrow-parens",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 10,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        136,
        136,
      ],
      "text": " ",
    },
    "line": 12,
    "message": "Missing space before =>.",
    "messageId": "expectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "arrow-spacing",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 11,
    "endLine": 16,
    "fix": Object {
      "range": Array [
        184,
        185,
      ],
      "text": "",
    },
    "line": 16,
    "message": "Unexpected space before *.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "generator-star-spacing",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 10,
    "endLine": 17,
    "fix": Object {
      "range": Array [
        216,
        217,
      ],
      "text": "",
    },
    "line": 17,
    "message": "Unexpected space before *.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "yield-star-spacing",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 11,
    "endLine": 20,
    "fix": Object {
      "range": Array [
        237,
        238,
      ],
      "text": "",
    },
    "line": 20,
    "message": "Unexpected space before *.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "generator-star-spacing",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 11,
    "endLine": 20,
    "fix": Object {
      "range": Array [
        239,
        239,
      ],
      "text": " ",
    },
    "line": 20,
    "message": "Missing space after *.",
    "messageId": "missingAfter",
    "nodeType": "Punctuator",
    "ruleId": "generator-star-spacing",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 10,
    "endLine": 21,
    "fix": Object {
      "range": Array [
        268,
        269,
      ],
      "text": "",
    },
    "line": 21,
    "message": "Unexpected space before *.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "yield-star-spacing",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 10,
    "endLine": 21,
    "fix": Object {
      "range": Array [
        270,
        270,
      ],
      "text": " ",
    },
    "line": 21,
    "message": "Missing space after *.",
    "messageId": "missingAfter",
    "nodeType": "Punctuator",
    "ruleId": "yield-star-spacing",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 50,
    "endLine": 26,
    "fix": Object {
      "range": Array [
        331,
        352,
      ],
      "text": "(a == 0 ? 'yes' : 'no')",
    },
    "line": 26,
    "message": "Arrow function used ambiguously with a conditional expression.",
    "messageId": "confusing",
    "nodeType": "ArrowFunctionExpression",
    "ruleId": "no-confusing-arrow",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 31,
    "line": 31,
    "message": "'constantValue' is constant.",
    "messageId": "const",
    "nodeType": "Identifier",
    "ruleId": "no-const-assign",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 12,
    "endLine": 37,
    "line": 37,
    "message": "Duplicate name 'bark'.",
    "messageId": "unexpected",
    "nodeType": "MethodDefinition",
    "ruleId": "no-dupe-class-members",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 26,
    "endLine": 42,
    "line": 42,
    "message": "\`Symbol\` cannot be called as a constructor.",
    "nodeType": "Identifier",
    "ruleId": "no-new-symbol",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 9,
    "endLine": 48,
    "line": 48,
    "message": "'this' is not allowed before 'super()'.",
    "nodeType": "ThisExpression",
    "ruleId": "no-this-before-super",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 56,
    "fix": Object {
      "range": Array [
        701,
        704,
      ],
      "text": "0",
    },
    "line": 56,
    "message": "Unnecessarily computed property [0] found.",
    "nodeType": "Property",
    "ruleId": "no-useless-computed-key",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 57,
    "fix": Object {
      "range": Array [
        711,
        716,
      ],
      "text": "'0'",
    },
    "line": 57,
    "message": "Unnecessarily computed property ['0'] found.",
    "nodeType": "Property",
    "ruleId": "no-useless-computed-key",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 24,
    "endLine": 63,
    "line": 63,
    "message": "Useless constructor.",
    "nodeType": "MethodDefinition",
    "ruleId": "no-useless-constructor",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 21,
    "endLine": 68,
    "fix": Object {
      "range": Array [
        805,
        808,
      ],
      "text": "let",
    },
    "line": 68,
    "message": "Unexpected var, use let or const instead.",
    "nodeType": "VariableDeclaration",
    "ruleId": "no-var",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 75,
    "fix": Object {
      "range": Array [
        867,
        911,
      ],
      "text": "action() {
    return 'hello';
  }",
    },
    "line": 73,
    "message": "Expected method shorthand.",
    "nodeType": "Property",
    "ruleId": "object-shorthand",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 2,
    "endLine": 82,
    "fix": Object {
      "range": Array [
        956,
        993,
      ],
      "text": "(item) => {
  return item + 1;
}",
    },
    "line": 80,
    "message": "Unexpected function expression.",
    "nodeType": "FunctionExpression",
    "ruleId": "prefer-arrow-callback",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 14,
    "endLine": 86,
    "fix": Object {
      "range": Array [
        1014,
        1017,
      ],
      "text": "const",
    },
    "line": 86,
    "message": "'notUpdate' is never reassigned. Use 'const' instead.",
    "messageId": "useConst",
    "nodeType": "Identifier",
    "ruleId": "prefer-const",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 25,
    "endLine": 90,
    "fix": Object {
      "range": Array [
        1068,
        1086,
      ],
      "text": "{item} = object",
    },
    "line": 90,
    "message": "Use object destructuring.",
    "nodeType": "VariableDeclarator",
    "ruleId": "prefer-destructuring",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 24,
    "endLine": 95,
    "line": 95,
    "message": "Use the rest parameters instead of 'arguments'.",
    "nodeType": "Identifier",
    "ruleId": "prefer-rest-params",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 28,
    "endLine": 101,
    "line": 101,
    "message": "Use the spread operator instead of '.apply()'.",
    "nodeType": "CallExpression",
    "ruleId": "prefer-spread",
    "severity": 2,
  },
  Object {
    "column": 17,
    "endColumn": 38,
    "endLine": 106,
    "fix": Object {
      "range": Array [
        1299,
        1320,
      ],
      "text": "\`Hello \${  name  }!\`",
    },
    "line": 106,
    "message": "Unexpected string concatenation.",
    "nodeType": "BinaryExpression",
    "ruleId": "prefer-template",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 112,
    "line": 110,
    "message": "This generator function does not have 'yield'.",
    "nodeType": "FunctionDeclaration",
    "ruleId": "require-yield",
    "severity": 2,
  },
  Object {
    "column": 18,
    "fix": Object {
      "range": Array [
        1419,
        1420,
      ],
      "text": "",
    },
    "line": 116,
    "message": "Unexpected whitespace after rest operator.",
    "nodeType": "RestElement",
    "ruleId": "rest-spread-spacing",
    "severity": 2,
  },
  Object {
    "column": 21,
    "fix": Object {
      "range": Array [
        1449,
        1450,
      ],
      "text": "",
    },
    "line": 117,
    "message": "Unexpected whitespace after spread property operator.",
    "nodeType": "SpreadElement",
    "ruleId": "rest-spread-spacing",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 23,
    "endLine": 121,
    "line": 121,
    "message": "Expected Symbol to have a description.",
    "messageId": "expected",
    "nodeType": "CallExpression",
    "ruleId": "symbol-description",
    "severity": 2,
  },
  Object {
    "column": 19,
    "fix": Object {
      "range": Array [
        1556,
        1557,
      ],
      "text": "",
    },
    "line": 125,
    "message": "Unexpected space(s) after '\${'.",
    "messageId": "unexpectedAfter",
    "nodeType": null,
    "ruleId": "template-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 28,
    "fix": Object {
      "range": Array [
        1562,
        1563,
      ],
      "text": "",
    },
    "line": 125,
    "message": "Unexpected space(s) before '}'.",
    "messageId": "unexpectedBefore",
    "nodeType": null,
    "ruleId": "template-curly-spacing",
    "severity": 2,
  },
]
`;

exports[`ESLint es6 should pass 1`] = `Array []`;
