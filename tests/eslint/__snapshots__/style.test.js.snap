// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESLint style should fail 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 4,
    "fix": Object {
      "range": Array [
        61,
        62,
      ],
      "text": "",
    },
    "line": 4,
    "message": "There should be no linebreak before ']'.",
    "messageId": "unexpectedClosingLinebreak",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-newline",
    "severity": 2,
  },
  Object {
    "column": 4,
    "endColumn": 5,
    "endLine": 6,
    "fix": Object {
      "range": Array [
        78,
        78,
      ],
      "text": "
",
    },
    "line": 6,
    "message": "A linebreak is required before ']'.",
    "messageId": "missingClosingLinebreak",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-newline",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 11,
    "endLine": 7,
    "fix": Object {
      "range": Array [
        90,
        91,
      ],
      "text": "",
    },
    "line": 7,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 16,
    "endLine": 7,
    "fix": Object {
      "range": Array [
        95,
        96,
      ],
      "text": "",
    },
    "line": 7,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 17,
    "endColumn": 1,
    "endLine": 8,
    "fix": Object {
      "range": Array [
        97,
        97,
      ],
      "text": ";",
    },
    "line": 7,
    "message": "Missing semicolon.",
    "messageId": "missingSemi",
    "nodeType": "VariableDeclaration",
    "ruleId": "semi",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 6,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        139,
        140,
      ],
      "text": "
",
    },
    "line": 12,
    "message": "There should be a linebreak after this element.",
    "messageId": "missingLineBreak",
    "nodeType": null,
    "ruleId": "array-element-newline",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 17,
    "endLine": 18,
    "fix": Object {
      "range": Array [
        186,
        186,
      ],
      "text": " ",
    },
    "line": 18,
    "message": "Requires a space after '{'.",
    "messageId": "missing",
    "nodeType": "BlockStatement",
    "ruleId": "block-spacing",
    "severity": 2,
  },
  Object {
    "column": 29,
    "endColumn": 30,
    "endLine": 18,
    "fix": Object {
      "range": Array [
        198,
        198,
      ],
      "text": " ",
    },
    "line": 18,
    "message": "Requires a space before '}'.",
    "messageId": "missing",
    "nodeType": "BlockStatement",
    "ruleId": "block-spacing",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 19,
    "fix": Object {
      "range": Array [
        219,
        219,
      ],
      "text": " ",
    },
    "line": 19,
    "message": "Requires a space before '}'.",
    "messageId": "missing",
    "nodeType": "BlockStatement",
    "ruleId": "block-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 25,
    "fix": Object {
      "range": Array [
        259,
        259,
      ],
      "text": "
",
    },
    "line": 25,
    "message": "Closing curly brace appears on the same line as the subsequent block.",
    "messageId": "sameLineClose",
    "nodeType": "Punctuator",
    "ruleId": "brace-style",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 25,
    "endLine": 31,
    "line": 31,
    "message": "Identifier 'external_module' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 22,
    "endLine": 33,
    "line": 33,
    "message": "Identifier 'my_favorite_color' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 22,
    "endLine": 35,
    "line": 35,
    "message": "Identifier 'do_something' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 17,
    "endLine": 39,
    "line": 39,
    "message": "Identifier 'do_something' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 38,
    "endLine": 43,
    "line": 43,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 39,
    "endColumn": 52,
    "endLine": 47,
    "line": 47,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 27,
    "endColumn": 40,
    "endLine": 51,
    "line": 51,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 10,
    "endLine": 56,
    "line": 56,
    "message": "Identifier 'my_pref' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 18,
    "endLine": 59,
    "line": 59,
    "message": "Identifier 'category_id' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 25,
    "endLine": 61,
    "line": 61,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 19,
    "endLine": 63,
    "line": 63,
    "message": "Identifier 'bar_baz' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 1,
    "endLine": 70,
    "fix": Object {
      "range": Array [
        859,
        859,
      ],
      "text": ",",
    },
    "line": 69,
    "message": "Missing trailing comma.",
    "messageId": "missing",
    "nodeType": "Property",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 47,
    "endColumn": 48,
    "endLine": 72,
    "fix": Object {
      "range": Array [
        910,
        911,
      ],
      "text": "",
    },
    "line": 72,
    "message": "Unexpected trailing comma.",
    "messageId": "unexpected",
    "nodeType": "Property",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 29,
    "endColumn": 30,
    "endLine": 74,
    "fix": Object {
      "range": Array [
        944,
        945,
      ],
      "text": "",
    },
    "line": 74,
    "message": "Unexpected trailing comma.",
    "messageId": "unexpected",
    "nodeType": "Literal",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 30,
    "endColumn": 31,
    "endLine": 74,
    "fix": Object {
      "range": Array [
        945,
        946,
      ],
      "text": "",
    },
    "line": 74,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 4,
    "endColumn": 1,
    "endLine": 79,
    "fix": Object {
      "range": Array [
        982,
        982,
      ],
      "text": ",",
    },
    "line": 78,
    "message": "Missing trailing comma.",
    "messageId": "missing",
    "nodeType": "Literal",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 1,
    "endLine": 84,
    "fix": Object {
      "range": Array [
        1020,
        1020,
      ],
      "text": ",",
    },
    "line": 83,
    "message": "Missing trailing comma.",
    "messageId": "missing",
    "nodeType": "Property",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 15,
    "endLine": 88,
    "fix": Object {
      "range": Array [
        1056,
        1057,
      ],
      "text": "",
    },
    "line": 88,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 25,
    "endLine": 89,
    "fix": Object {
      "range": Array [
        1085,
        1086,
      ],
      "text": "",
    },
    "line": 89,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 36,
    "endColumn": 37,
    "endLine": 89,
    "fix": Object {
      "range": Array [
        1098,
        1098,
      ],
      "text": " ",
    },
    "line": 89,
    "message": "A space is required before '}'.",
    "messageId": "requireSpaceBefore",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 6,
    "endLine": 96,
    "fix": Object {
      "range": Array [
        1161,
        1168,
      ],
      "text": ",
     ",
    },
    "line": 96,
    "message": "',' should be placed last.",
    "messageId": "expectedCommaLast",
    "nodeType": "Property",
    "ruleId": "comma-style",
    "severity": 2,
  },
  Object {
    "column": 8,
    "endColumn": 9,
    "endLine": 102,
    "fix": Object {
      "range": Array [
        1219,
        1220,
      ],
      "text": "",
    },
    "line": 102,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 6,
    "endLine": 103,
    "fix": Object {
      "range": Array [
        1227,
        1228,
      ],
      "text": "",
    },
    "line": 103,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 13,
    "endLine": 104,
    "fix": Object {
      "range": Array [
        1247,
        1248,
      ],
      "text": "",
    },
    "line": 104,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "Property",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 15,
    "endLine": 104,
    "fix": Object {
      "range": Array [
        1249,
        1250,
      ],
      "text": "",
    },
    "line": 104,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "Property",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 10,
    "endLine": 105,
    "fix": Object {
      "range": Array [
        1266,
        1267,
      ],
      "text": "",
    },
    "line": 105,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 14,
    "endLine": 105,
    "fix": Object {
      "range": Array [
        1270,
        1271,
      ],
      "text": "",
    },
    "line": 105,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 3,
    "endLine": 108,
    "fix": Object {
      "range": Array [
        1299,
        1300,
      ],
      "text": "",
    },
    "line": 108,
    "message": "Unexpected whitespace between function name and paren.",
    "messageId": "unexpectedWhitespace",
    "nodeType": "CallExpression",
    "ruleId": "func-call-spacing",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 0,
    "endLine": 111,
    "line": 110,
    "message": "Unexpected whitespace between function name and paren.",
    "messageId": "unexpectedWhitespace",
    "nodeType": "CallExpression",
    "ruleId": "func-call-spacing",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 29,
    "endLine": 114,
    "line": 114,
    "message": "Unexpected unnamed function.",
    "messageId": "unnamed",
    "nodeType": "FunctionExpression",
    "ruleId": "func-names",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 119,
    "fix": Object {
      "range": Array [
        1425,
        1426,
      ],
      "text": "",
    },
    "line": 119,
    "message": "Unexpected newline before ')'.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 123,
    "fix": Object {
      "range": Array [
        1474,
        1475,
      ],
      "text": "",
    },
    "line": 123,
    "message": "Unexpected newline before ')'.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 7,
    "endLine": 127,
    "fix": Object {
      "range": Array [
        1520,
        1520,
      ],
      "text": "
",
    },
    "line": 127,
    "message": "Expected newline before ')'.",
    "messageId": "expectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 7,
    "endLine": 131,
    "fix": Object {
      "range": Array [
        1560,
        1560,
      ],
      "text": "
",
    },
    "line": 131,
    "message": "Expected newline before ')'.",
    "messageId": "expectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 135,
    "fix": Object {
      "range": Array [
        1587,
        1587,
      ],
      "text": "  ",
    },
    "line": 135,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Keyword",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 137,
    "fix": Object {
      "range": Array [
        1608,
        1608,
      ],
      "text": "  ",
    },
    "line": 137,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Keyword",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 142,
    "fix": Object {
      "range": Array [
        1641,
        1641,
      ],
      "text": "  ",
    },
    "line": 142,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 146,
    "fix": Object {
      "range": Array [
        1668,
        1668,
      ],
      "text": "  ",
    },
    "line": 146,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 147,
    "fix": Object {
      "range": Array [
        1673,
        1673,
      ],
      "text": "  ",
    },
    "line": 147,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 152,
    "fix": Object {
      "range": Array [
        1719,
        1723,
      ],
      "text": "  ",
    },
    "line": 152,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 158,
    "fix": Object {
      "range": Array [
        1787,
        1791,
      ],
      "text": "  ",
    },
    "line": 158,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 162,
    "fix": Object {
      "range": Array [
        1811,
        1815,
      ],
      "text": "  ",
    },
    "line": 162,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 163,
    "fix": Object {
      "range": Array [
        1820,
        1826,
      ],
      "text": "  ",
    },
    "line": 163,
    "message": "Expected indentation of 2 spaces but found 6.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 164,
    "fix": Object {
      "range": Array [
        1830,
        1831,
      ],
      "text": "",
    },
    "line": 164,
    "message": "Unexpected newline before ')'.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 167,
    "fix": Object {
      "range": Array [
        1852,
        1856,
      ],
      "text": "  ",
    },
    "line": 167,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 168,
    "fix": Object {
      "range": Array [
        1861,
        1861,
      ],
      "text": "  ",
    },
    "line": 168,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 169,
    "fix": Object {
      "range": Array [
        1866,
        1872,
      ],
      "text": "  ",
    },
    "line": 169,
    "message": "Expected indentation of 2 spaces but found 6.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 173,
    "fix": Object {
      "range": Array [
        1899,
        1903,
      ],
      "text": "  ",
    },
    "line": 173,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 174,
    "fix": Object {
      "range": Array [
        1911,
        1911,
      ],
      "text": "  ",
    },
    "line": 174,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 175,
    "fix": Object {
      "range": Array [
        1919,
        1925,
      ],
      "text": "  ",
    },
    "line": 175,
    "message": "Expected indentation of 2 spaces but found 6.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 179,
    "fix": Object {
      "range": Array [
        1958,
        1958,
      ],
      "text": "  ",
    },
    "line": 179,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 181,
    "fix": Object {
      "range": Array [
        1973,
        1973,
      ],
      "text": "  ",
    },
    "line": 181,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 16,
    "endLine": 183,
    "fix": Object {
      "range": Array [
        1990,
        1995,
      ],
      "text": " =  ",
    },
    "line": 183,
    "message": "There should be no line break before or after '='.",
    "messageId": "noLinebreak",
    "nodeType": "VariableDeclarator",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 14,
    "endLine": 184,
    "fix": Object {
      "range": Array [
        2004,
        2009,
      ],
      "text": "
  : ",
    },
    "line": 184,
    "message": "':' should be placed at the beginning of the line.",
    "messageId": "operatorAtBeginning",
    "nodeType": "ConditionalExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 3,
    "endLine": 185,
    "fix": Object {
      "range": Array [
        2007,
        2009,
      ],
      "text": "    ",
    },
    "line": 185,
    "message": "Expected indentation of 4 spaces but found 2.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 189,
    "fix": Object {
      "range": Array [
        2051,
        2051,
      ],
      "text": " ",
    },
    "line": 189,
    "message": "A space is required after '{'.",
    "messageId": "requireSpaceAfter",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 32,
    "endLine": 189,
    "fix": Object {
      "range": Array [
        2055,
        2055,
      ],
      "text": " ",
    },
    "line": 189,
    "message": "Missing space before value for key 'key'.",
    "messageId": "missingValue",
    "nodeType": "Literal",
    "ruleId": "key-spacing",
    "severity": 2,
  },
  Object {
    "column": 32,
    "endColumn": 33,
    "endLine": 189,
    "fix": Object {
      "range": Array [
        2062,
        2062,
      ],
      "text": " ",
    },
    "line": 189,
    "message": "A space is required before '}'.",
    "messageId": "requireSpaceBefore",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 14,
    "endLine": 192,
    "fix": Object {
      "range": Array [
        2118,
        2124,
      ],
      "text": "",
    },
    "line": 192,
    "message": "Extra space before value for key 'key'.",
    "messageId": "extraValue",
    "nodeType": "Literal",
    "ruleId": "key-spacing",
    "severity": 2,
  },
  Object {
    "column": 17,
    "endColumn": 18,
    "endLine": 197,
    "fix": Object {
      "range": Array [
        2174,
        2174,
      ],
      "text": "
",
    },
    "line": 197,
    "message": "Closing curly brace appears on the same line as the subsequent block.",
    "messageId": "sameLineClose",
    "nodeType": "Punctuator",
    "ruleId": "brace-style",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 22,
    "endLine": 197,
    "fix": Object {
      "range": Array [
        2174,
        2174,
      ],
      "text": " ",
    },
    "line": 197,
    "message": "Expected space(s) before \\"else\\".",
    "messageId": "expectedBefore",
    "nodeType": null,
    "ruleId": "keyword-spacing",
    "severity": 2,
  },
  Object {
    "column": 44,
    "endColumn": 45,
    "endLine": 197,
    "fix": Object {
      "range": Array [
        2201,
        2201,
      ],
      "text": "
",
    },
    "line": 197,
    "message": "Closing curly brace appears on the same line as the subsequent block.",
    "messageId": "sameLineClose",
    "nodeType": "Punctuator",
    "ruleId": "brace-style",
    "severity": 2,
  },
  Object {
    "column": 45,
    "endColumn": 49,
    "endLine": 197,
    "fix": Object {
      "range": Array [
        2201,
        2201,
      ],
      "text": " ",
    },
    "line": 197,
    "message": "Expected space(s) before \\"else\\".",
    "messageId": "expectedBefore",
    "nodeType": null,
    "ruleId": "keyword-spacing",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 207,
    "fix": Object {
      "range": Array [
        2279,
        2279,
      ],
      "text": "
",
    },
    "line": 205,
    "message": "Expected blank line between class members.",
    "messageId": "always",
    "nodeType": "MethodDefinition",
    "ruleId": "lines-between-class-members",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 208,
    "fix": Object {
      "range": Array [
        2305,
        2305,
      ],
      "text": "
",
    },
    "line": 208,
    "message": "Expected blank line between class members.",
    "messageId": "always",
    "nodeType": "MethodDefinition",
    "ruleId": "lines-between-class-members",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 15,
    "endLine": 209,
    "fix": Object {
      "range": Array [
        2316,
        2316,
      ],
      "text": "
",
    },
    "line": 209,
    "message": "Expected blank line between class members.",
    "messageId": "always",
    "nodeType": "MethodDefinition",
    "ruleId": "lines-between-class-members",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 449,
    "endLine": 215,
    "line": 215,
    "message": "This line has a length of 448. Maximum allowed is 100.",
    "messageId": "max",
    "nodeType": "Program",
    "ruleId": "max-len",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 19,
    "endLine": 220,
    "line": 220,
    "message": "Function 'maxParams' has too many parameters (4). Maximum allowed is 3.",
    "messageId": "exceed",
    "nodeType": "FunctionDeclaration",
    "ruleId": "max-params",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 21,
    "endLine": 226,
    "line": 226,
    "message": "A constructor name should not start with a lowercase letter.",
    "messageId": "lower",
    "nodeType": "NewExpression",
    "ruleId": "new-cap",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 27,
    "endLine": 230,
    "fix": Object {
      "range": Array [
        2952,
        2952,
      ],
      "text": "()",
    },
    "line": 230,
    "message": "Missing '()' invoking a constructor.",
    "messageId": "missing",
    "nodeType": "NewExpression",
    "ruleId": "new-parens",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 35,
    "endLine": 231,
    "fix": Object {
      "range": Array [
        2988,
        2988,
      ],
      "text": "()",
    },
    "line": 231,
    "message": "Missing '()' invoking a constructor.",
    "messageId": "missing",
    "nodeType": "NewExpression",
    "ruleId": "new-parens",
    "severity": 2,
  },
  Object {
    "column": 23,
    "endColumn": 29,
    "endLine": 235,
    "fix": Object {
      "range": Array [
        3042,
        3042,
      ],
      "text": "
",
    },
    "line": 235,
    "message": "Expected line break before \`.final\`.",
    "messageId": "expected",
    "nodeType": "Identifier",
    "ruleId": "newline-per-chained-call",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 26,
    "endLine": 239,
    "line": 239,
    "message": "The array literal notation [] is preferable.",
    "messageId": "preferLiteral",
    "nodeType": "NewExpression",
    "ruleId": "no-array-constructor",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 20,
    "endLine": 243,
    "line": 243,
    "message": "Unexpected use of '|'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 16,
    "endLine": 244,
    "line": 244,
    "message": "Unexpected use of '&'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 16,
    "endLine": 245,
    "line": 245,
    "message": "Unexpected use of '^'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 14,
    "endLine": 247,
    "line": 247,
    "message": "Unexpected use of '~'.",
    "messageId": "unexpected",
    "nodeType": "UnaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 14,
    "endLine": 247,
    "fix": Object {
      "range": Array [
        3188,
        3189,
      ],
      "text": "",
    },
    "line": 247,
    "message": "Unexpected space after unary operator '~'.",
    "messageId": "unexpectedAfter",
    "nodeType": "UnaryExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 17,
    "endLine": 249,
    "line": 249,
    "message": "Unexpected use of '<<'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 17,
    "endLine": 250,
    "line": 250,
    "message": "Unexpected use of '>>'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 18,
    "endLine": 251,
    "line": 251,
    "message": "Unexpected use of '>>>'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 252,
    "line": 252,
    "message": "Unexpected use of '|='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 253,
    "line": 253,
    "message": "Unexpected use of '&='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 254,
    "line": 254,
    "message": "Unexpected use of '^='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 255,
    "line": 255,
    "message": "Unexpected use of '<<='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 256,
    "line": 256,
    "message": "Unexpected use of '>>='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 15,
    "endLine": 257,
    "line": 257,
    "message": "Unexpected use of '>>>='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 28,
    "endLine": 261,
    "line": 261,
    "message": "Unary operator '++' used.",
    "messageId": "unexpectedUnaryOp",
    "nodeType": "UpdateExpression",
    "ruleId": "no-plusplus",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 14,
    "endLine": 263,
    "line": 263,
    "message": "Unexpected use of continue statement.",
    "messageId": "unexpected",
    "nodeType": "ContinueStatement",
    "ruleId": "no-continue",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 277,
    "fix": Object {
      "range": Array [
        3482,
        3526,
      ],
      "text": "if (anotherCondition) {
    // ...
  }",
    },
    "line": 275,
    "message": "Unexpected if as the only statement in an else block.",
    "messageId": "unexpectedLonelyIf",
    "nodeType": "IfStatement",
    "ruleId": "no-lonely-if",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 289,
    "fix": Object {
      "range": Array [
        3561,
        3629,
      ],
      "text": "if (anotherCondition) {
    // ...
  }
  else {
    // ...
  }",
    },
    "line": 284,
    "message": "Unexpected if as the only statement in an else block.",
    "messageId": "unexpectedLonelyIf",
    "nodeType": "IfStatement",
    "ruleId": "no-lonely-if",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 26,
    "endLine": 294,
    "line": 294,
    "message": "Unexpected mix of '&&' and '||'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 33,
    "endColumn": 35,
    "endLine": 294,
    "line": 294,
    "message": "Unexpected mix of '&&' and '||'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 295,
    "line": 295,
    "message": "Unexpected mix of '+' and '*'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 25,
    "endLine": 295,
    "line": 295,
    "message": "Unexpected mix of '+' and '*'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 297,
    "line": 297,
    "message": "Unexpected mix of '%' and '**'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 26,
    "endLine": 297,
    "line": 297,
    "message": "Unexpected mix of '%' and '**'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 298,
    "line": 298,
    "message": "Unexpected mix of '%' and '+'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 25,
    "endLine": 298,
    "line": 298,
    "message": "Unexpected mix of '%' and '+'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 299,
    "line": 299,
    "message": "Unexpected mix of '%' and '-'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 25,
    "endLine": 299,
    "line": 299,
    "message": "Unexpected mix of '%' and '-'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 22,
    "endLine": 302,
    "line": 302,
    "message": "Unexpected mix of '**' and '+'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 26,
    "endLine": 302,
    "line": 302,
    "message": "Unexpected mix of '**' and '+'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 22,
    "endLine": 303,
    "line": 303,
    "message": "Unexpected mix of '**' and '-'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 26,
    "endLine": 303,
    "line": 303,
    "message": "Unexpected mix of '**' and '-'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 22,
    "endLine": 304,
    "line": 304,
    "message": "Unexpected mix of '**' and '*'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 26,
    "endLine": 304,
    "line": 304,
    "message": "Unexpected mix of '**' and '*'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 22,
    "endLine": 305,
    "line": 305,
    "message": "Unexpected mix of '**' and '/'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 26,
    "endLine": 305,
    "line": 305,
    "message": "Unexpected mix of '**' and '/'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 22,
    "endLine": 306,
    "line": 306,
    "message": "Unexpected mix of '&&' and '||'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 27,
    "endLine": 306,
    "line": 306,
    "message": "Unexpected mix of '&&' and '||'.",
    "messageId": "unexpectedMixedOperator",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 57,
    "endLine": 310,
    "line": 310,
    "message": "Unexpected chained assignment.",
    "messageId": "unexpectedChain",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-multi-assign",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 315,
    "fix": Object {
      "range": Array [
        4106,
        4108,
      ],
      "text": "",
    },
    "line": 313,
    "message": "More than 2 blank lines not allowed.",
    "messageId": "consecutiveBlank",
    "nodeType": "Program",
    "ruleId": "no-multiple-empty-lines",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 60,
    "endLine": 319,
    "line": 319,
    "message": "Do not nest ternary expressions.",
    "messageId": "noNestedTernary",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-nested-ternary",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 26,
    "endLine": 323,
    "line": 323,
    "message": "The object literal notation {} is preferrable.",
    "messageId": "preferLiteral",
    "nodeType": "NewExpression",
    "ruleId": "no-new-object",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 328,
    "line": 328,
    "message": "Unary operator '++' used.",
    "messageId": "unexpectedUnaryOp",
    "nodeType": "UpdateExpression",
    "ruleId": "no-plusplus",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 329,
    "line": 329,
    "message": "Unary operator '--' used.",
    "messageId": "unexpectedUnaryOp",
    "nodeType": "UpdateExpression",
    "ruleId": "no-plusplus",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 335,
    "line": 333,
    "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
    "messageId": "restrictedSyntax",
    "nodeType": "ForInStatement",
    "ruleId": "no-restricted-syntax",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 339,
    "line": 337,
    "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
    "messageId": "restrictedSyntax",
    "nodeType": "ForOfStatement",
    "ruleId": "no-restricted-syntax",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 16,
    "endLine": 341,
    "line": 341,
    "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
    "messageId": "restrictedSyntax",
    "nodeType": "LabeledStatement",
    "ruleId": "no-restricted-syntax",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 31,
    "endLine": 345,
    "line": 345,
    "message": "Unexpected dangling '_' in '_underscoreDangle'.",
    "messageId": "unexpectedUnderscore",
    "nodeType": "VariableDeclarator",
    "ruleId": "no-underscore-dangle",
    "severity": 2,
  },
  Object {
    "column": 23,
    "endColumn": 45,
    "endLine": 349,
    "fix": Object {
      "range": Array [
        4557,
        4579,
      ],
      "text": "x === 2",
    },
    "line": 349,
    "message": "Unnecessary use of boolean literals in conditional expression.",
    "messageId": "unnecessaryConditionalExpression",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-unneeded-ternary",
    "severity": 2,
  },
  Object {
    "column": 19,
    "endColumn": 35,
    "endLine": 350,
    "fix": Object {
      "range": Array [
        4599,
        4615,
      ],
      "text": "!!x",
    },
    "line": 350,
    "message": "Unnecessary use of boolean literals in conditional expression.",
    "messageId": "unnecessaryConditionalExpression",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-unneeded-ternary",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 30,
    "endLine": 351,
    "fix": Object {
      "range": Array [
        4637,
        4646,
      ],
      "text": "x || 1",
    },
    "line": 351,
    "message": "Unnecessary use of conditional expression for default assignment.",
    "messageId": "unnecessaryConditionalAssignment",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-unneeded-ternary",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 10,
    "endLine": 355,
    "fix": Object {
      "range": Array [
        4687,
        4688,
      ],
      "text": "",
    },
    "line": 355,
    "message": "Unexpected whitespace before property bar.",
    "messageId": "unexpectedWhitespace",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 356,
    "fix": Object {
      "range": Array [
        4698,
        4700,
      ],
      "text": ".",
    },
    "line": 356,
    "message": "Unexpected whitespace before property bar.",
    "messageId": "unexpectedWhitespace",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 357,
    "fix": Object {
      "range": Array [
        4708,
        4710,
      ],
      "text": ".",
    },
    "line": 357,
    "message": "Unexpected whitespace before property bar.",
    "messageId": "unexpectedWhitespace",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 358,
    "fix": Object {
      "range": Array [
        4723,
        4725,
      ],
      "text": ".",
    },
    "line": 358,
    "message": "Unexpected whitespace before property baz.",
    "messageId": "unexpectedWhitespace",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 358,
    "fix": Object {
      "range": Array [
        4718,
        4720,
      ],
      "text": ".",
    },
    "line": 358,
    "message": "Unexpected whitespace before property bar.",
    "messageId": "unexpectedWhitespace",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 367,
    "fix": Object {
      "range": Array [
        4816,
        4819,
      ],
      "text": " ",
    },
    "line": 367,
    "message": "Expected no linebreak before this statement.",
    "messageId": "expectNoLinebreak",
    "nodeType": "ExpressionStatement",
    "ruleId": "nonblock-statement-body-position",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 369,
    "fix": Object {
      "range": Array [
        4830,
        4833,
      ],
      "text": " ",
    },
    "line": 369,
    "message": "Expected no linebreak before this statement.",
    "messageId": "expectNoLinebreak",
    "nodeType": "ExpressionStatement",
    "ruleId": "nonblock-statement-body-position",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 373,
    "fix": Object {
      "range": Array [
        4886,
        4886,
      ],
      "text": "
",
    },
    "line": 373,
    "message": "Expected a line break after this opening brace.",
    "messageId": "expectedLinebreakAfterOpeningBrace",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 56,
    "endColumn": 57,
    "endLine": 373,
    "fix": Object {
      "range": Array [
        4921,
        4921,
      ],
      "text": "
",
    },
    "line": 373,
    "message": "Expected a line break before this closing brace.",
    "messageId": "expectedLinebreakBeforeClosingBrace",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 15,
    "endLine": 376,
    "fix": Object {
      "range": Array [
        4963,
        4963,
      ],
      "text": "
",
    },
    "line": 376,
    "message": "Expected a line break after this opening brace.",
    "messageId": "expectedLinebreakAfterOpeningBrace",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 15,
    "endLine": 376,
    "fix": Object {
      "range": Array [
        4963,
        4963,
      ],
      "text": " ",
    },
    "line": 376,
    "message": "A space is required after '{'.",
    "messageId": "requireSpaceAfter",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 48,
    "endColumn": 49,
    "endLine": 376,
    "fix": Object {
      "range": Array [
        4996,
        4996,
      ],
      "text": "
",
    },
    "line": 376,
    "message": "Expected a line break before this closing brace.",
    "messageId": "expectedLinebreakBeforeClosingBrace",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 48,
    "endColumn": 49,
    "endLine": 376,
    "fix": Object {
      "range": Array [
        4996,
        4996,
      ],
      "text": " ",
    },
    "line": 376,
    "message": "A space is required before '}'.",
    "messageId": "requireSpaceBefore",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 15,
    "endLine": 381,
    "fix": Object {
      "range": Array [
        5029,
        5033,
      ],
      "text": ";
  const ",
    },
    "line": 380,
    "message": "Split 'const' declarations into multiple statements.",
    "messageId": "split",
    "nodeType": "VariableDeclaration",
    "ruleId": "one-var",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 33,
    "endLine": 384,
    "fix": Object {
      "range": Array [
        5096,
        5097,
      ],
      "text": "; let",
    },
    "line": 384,
    "message": "Split 'let' declarations into multiple statements.",
    "messageId": "split",
    "nodeType": "VariableDeclaration",
    "ruleId": "one-var",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 32,
    "endLine": 384,
    "fix": Object {
      "range": Array [
        5098,
        5098,
      ],
      "text": "
",
    },
    "line": 384,
    "message": "Expected variable declaration to be on a new line.",
    "messageId": "expectVarOnNewline",
    "nodeType": "VariableDeclaration",
    "ruleId": "one-var-declaration-per-line",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 18,
    "endLine": 389,
    "fix": Object {
      "range": Array [
        5152,
        5169,
      ],
      "text": "value += y",
    },
    "line": 389,
    "message": "Assignment can be replaced with operator assignment.",
    "messageId": "replaced",
    "nodeType": "AssignmentExpression",
    "ruleId": "operator-assignment",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 12,
    "endLine": 393,
    "fix": Object {
      "range": Array [
        5204,
        5209,
      ],
      "text": "
  + ",
    },
    "line": 393,
    "message": "'+' should be placed at the beginning of the line.",
    "messageId": "operatorAtBeginning",
    "nodeType": "BinaryExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 15,
    "endLine": 397,
    "fix": Object {
      "range": Array [
        5229,
        5235,
      ],
      "text": "
  || ",
    },
    "line": 397,
    "message": "'||' should be placed at the beginning of the line.",
    "messageId": "operatorAtBeginning",
    "nodeType": "LogicalExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 3,
    "endLine": 407,
    "fix": Object {
      "range": Array [
        5297,
        5299,
      ],
      "text": "
",
    },
    "line": 405,
    "message": "Block must not be padded by blank lines.",
    "messageId": "neverPadBlock",
    "nodeType": "BlockStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 1,
    "endLine": 409,
    "fix": Object {
      "range": Array [
        5311,
        5313,
      ],
      "text": "
",
    },
    "line": 407,
    "message": "Block must not be padded by blank lines.",
    "messageId": "neverPadBlock",
    "nodeType": "BlockStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 19,
    "endColumn": 3,
    "endLine": 413,
    "fix": Object {
      "range": Array [
        5335,
        5337,
      ],
      "text": "
",
    },
    "line": 411,
    "message": "Block must not be padded by blank lines.",
    "messageId": "neverPadBlock",
    "nodeType": "ClassBody",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 1,
    "endLine": 415,
    "fix": Object {
      "range": Array [
        5348,
        5350,
      ],
      "text": "
",
    },
    "line": 413,
    "message": "Block must not be padded by blank lines.",
    "messageId": "neverPadBlock",
    "nodeType": "ClassBody",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 3,
    "endLine": 420,
    "fix": Object {
      "range": Array [
        5370,
        5372,
      ],
      "text": "
",
    },
    "line": 418,
    "message": "Block must not be padded by blank lines.",
    "messageId": "neverPadBlock",
    "nodeType": "SwitchStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 1,
    "endLine": 423,
    "fix": Object {
      "range": Array [
        5402,
        5404,
      ],
      "text": "
",
    },
    "line": 421,
    "message": "Block must not be padded by blank lines.",
    "messageId": "neverPadBlock",
    "nodeType": "SwitchStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 19,
    "endColumn": 44,
    "endLine": 427,
    "fix": Object {
      "range": Array [
        5450,
        5475,
      ],
      "text": "{ ...object}",
    },
    "line": 427,
    "message": "Use an object spread instead of \`Object.assign\` eg: \`{ ...foo }\`.",
    "messageId": "useSpreadMessage",
    "nodeType": "CallExpression",
    "ruleId": "prefer-object-spread",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 432,
    "fix": Object {
      "range": Array [
        5515,
        5518,
      ],
      "text": "\\"one\\"",
    },
    "line": 432,
    "message": "Inconsistently quoted property 'one' found.",
    "messageId": "inconsistentlyQuotedProperty",
    "nodeType": "Property",
    "ruleId": "quote-props",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 433,
    "fix": Object {
      "range": Array [
        5525,
        5528,
      ],
      "text": "\\"two\\"",
    },
    "line": 433,
    "message": "Inconsistently quoted property 'two' found.",
    "messageId": "inconsistentlyQuotedProperty",
    "nodeType": "Property",
    "ruleId": "quote-props",
    "severity": 2,
  },
  Object {
    "column": 22,
    "endColumn": 30,
    "endLine": 439,
    "fix": Object {
      "range": Array [
        5588,
        5596,
      ],
      "text": "'string'",
    },
    "line": 439,
    "message": "Strings must use singlequote.",
    "messageId": "wrongQuotes",
    "nodeType": "Literal",
    "ruleId": "quotes",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 1,
    "endLine": 444,
    "fix": Object {
      "range": Array [
        5628,
        5628,
      ],
      "text": ";",
    },
    "line": 443,
    "message": "Missing semicolon.",
    "messageId": "missingSemi",
    "nodeType": "VariableDeclaration",
    "ruleId": "semi",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 444,
    "fix": Object {
      "range": Array [
        5646,
        5647,
      ],
      "text": "",
    },
    "line": 444,
    "message": "Unexpected whitespace before semicolon.",
    "messageId": "unexpectedWhitespaceBefore",
    "nodeType": "ExpressionStatement",
    "ruleId": "semi-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 446,
    "line": 446,
    "message": "Expected this semicolon to be at the end of the previous line.",
    "messageId": "expectedSemiColon",
    "nodeType": null,
    "ruleId": "semi-style",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 17,
    "endLine": 450,
    "fix": Object {
      "range": Array [
        5721,
        5721,
      ],
      "text": " ",
    },
    "line": 450,
    "message": "Missing space before opening brace.",
    "messageId": "missingSpace",
    "nodeType": "BlockStatement",
    "ruleId": "space-before-blocks",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 26,
    "endLine": 454,
    "fix": Object {
      "range": Array [
        5781,
        5782,
      ],
      "text": "",
    },
    "line": 454,
    "message": "Unexpected space before function parentheses.",
    "messageId": "unexpectedSpace",
    "nodeType": "FunctionDeclaration",
    "ruleId": "space-before-function-paren",
    "severity": 2,
  },
  Object {
    "column": 35,
    "endColumn": 36,
    "endLine": 455,
    "fix": Object {
      "range": Array [
        5822,
        5823,
      ],
      "text": "",
    },
    "line": 455,
    "message": "Unexpected space before function parentheses.",
    "messageId": "unexpectedSpace",
    "nodeType": "FunctionExpression",
    "ruleId": "space-before-function-paren",
    "severity": 2,
  },
  Object {
    "column": 33,
    "endColumn": 34,
    "endLine": 456,
    "fix": Object {
      "range": Array [
        5862,
        5862,
      ],
      "text": " ",
    },
    "line": 456,
    "message": "Missing space before function parentheses.",
    "messageId": "missingSpace",
    "nodeType": "ArrowFunctionExpression",
    "ruleId": "space-before-function-paren",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 6,
    "endLine": 460,
    "fix": Object {
      "range": Array [
        5896,
        5897,
      ],
      "text": "",
    },
    "line": 460,
    "message": "There should be no space after this paren.",
    "messageId": "rejectedOpeningSpace",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 14,
    "endLine": 460,
    "fix": Object {
      "range": Array [
        5904,
        5905,
      ],
      "text": "",
    },
    "line": 460,
    "message": "There should be no space before this paren.",
    "messageId": "rejectedClosingSpace",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 2,
    "endColumn": 3,
    "endLine": 464,
    "fix": Object {
      "range": Array [
        5930,
        5931,
      ],
      "text": " + ",
    },
    "line": 464,
    "message": "Operator '+' must be spaced.",
    "messageId": "missingSpace",
    "nodeType": "BinaryExpression",
    "ruleId": "space-infix-ops",
    "severity": 2,
  },
  Object {
    "column": 2,
    "endColumn": 3,
    "endLine": 465,
    "fix": Object {
      "range": Array [
        5935,
        5936,
      ],
      "text": " ? ",
    },
    "line": 465,
    "message": "Operator '?' must be spaced.",
    "messageId": "missingSpace",
    "nodeType": "ConditionalExpression",
    "ruleId": "space-infix-ops",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 16,
    "endLine": 469,
    "fix": Object {
      "range": Array [
        5968,
        5968,
      ],
      "text": " ",
    },
    "line": 469,
    "message": "Unary word operator 'delete' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "UnaryExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 23,
    "endLine": 470,
    "fix": Object {
      "range": Array [
        5994,
        5994,
      ],
      "text": " ",
    },
    "line": 470,
    "message": "Unary word operator 'new' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "NewExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 473,
    "fix": Object {
      "range": Array [
        6032,
        6032,
      ],
      "text": " ",
    },
    "line": 473,
    "message": "Unary word operator 'yield' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "YieldExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 13,
    "endLine": 477,
    "fix": Object {
      "range": Array [
        6075,
        6075,
      ],
      "text": " ",
    },
    "line": 477,
    "message": "Unary word operator 'await' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "AwaitExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 17,
    "endLine": 482,
    "fix": Object {
      "range": Array [
        6106,
        6106,
      ],
      "text": " ",
    },
    "line": 482,
    "message": "Expected space or tab after '//' in comment.",
    "messageId": "expectedSpaceAfter",
    "nodeType": "Line",
    "ruleId": "spaced-comment",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 19,
    "endLine": 483,
    "fix": Object {
      "range": Array [
        6123,
        6123,
      ],
      "text": " ",
    },
    "line": 483,
    "message": "Expected space or tab after '/*' in comment.",
    "messageId": "expectedSpaceAfter",
    "nodeType": "Block",
    "ruleId": "spaced-comment",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 488,
    "fix": Object {
      "range": Array [
        6201,
        6202,
      ],
      "text": "",
    },
    "line": 488,
    "message": "Unexpected space(s) before this colon.",
    "messageId": "unexpectedBefore",
    "nodeType": "SwitchCase",
    "ruleId": "switch-colon-spacing",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 6,
    "endLine": 493,
    "fix": Object {
      "range": Array [
        6246,
        6247,
      ],
      "text": "",
    },
    "line": 493,
    "message": "Unexpected space between template tag and template literal.",
    "messageId": "unexpected",
    "nodeType": "TaggedTemplateExpression",
    "ruleId": "template-tag-spacing",
    "severity": 2,
  },
]
`;

exports[`ESLint style should pass 1`] = `Array []`;
