// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESLint style should fail 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 4,
    "fix": Object {
      "range": Array [
        61,
        62,
      ],
      "text": "",
    },
    "line": 4,
    "message": "There should be no linebreak before ']'.",
    "messageId": "unexpectedClosingLinebreak",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-newline",
    "severity": 2,
  },
  Object {
    "column": 4,
    "endColumn": 5,
    "endLine": 6,
    "fix": Object {
      "range": Array [
        78,
        78,
      ],
      "text": "
",
    },
    "line": 6,
    "message": "A linebreak is required before ']'.",
    "messageId": "missingClosingLinebreak",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-newline",
    "severity": 2,
  },
  Object {
    "column": 9,
    "fix": Object {
      "range": Array [
        90,
        91,
      ],
      "text": "",
    },
    "line": 7,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 16,
    "fix": Object {
      "range": Array [
        95,
        96,
      ],
      "text": "",
    },
    "line": 7,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 17,
    "fix": Object {
      "range": Array [
        97,
        97,
      ],
      "text": ";",
    },
    "line": 7,
    "message": "Missing semicolon.",
    "nodeType": "VariableDeclaration",
    "ruleId": "semi",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 6,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        139,
        140,
      ],
      "text": "
",
    },
    "line": 12,
    "message": "There should be a linebreak after this element.",
    "messageId": "missingLineBreak",
    "nodeType": null,
    "ruleId": "array-element-newline",
    "severity": 2,
  },
  Object {
    "column": 16,
    "fix": Object {
      "range": Array [
        186,
        186,
      ],
      "text": " ",
    },
    "line": 18,
    "message": "Requires a space after '{'.",
    "messageId": "missing",
    "nodeType": "BlockStatement",
    "ruleId": "block-spacing",
    "severity": 2,
  },
  Object {
    "column": 29,
    "fix": Object {
      "range": Array [
        198,
        198,
      ],
      "text": " ",
    },
    "line": 18,
    "message": "Requires a space before '}'.",
    "messageId": "missing",
    "nodeType": "BlockStatement",
    "ruleId": "block-spacing",
    "severity": 2,
  },
  Object {
    "column": 20,
    "fix": Object {
      "range": Array [
        219,
        219,
      ],
      "text": " ",
    },
    "line": 19,
    "message": "Requires a space before '}'.",
    "messageId": "missing",
    "nodeType": "BlockStatement",
    "ruleId": "block-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 25,
    "fix": Object {
      "range": Array [
        259,
        259,
      ],
      "text": "
",
    },
    "line": 25,
    "message": "Closing curly brace appears on the same line as the subsequent block.",
    "messageId": "sameLineClose",
    "nodeType": "Punctuator",
    "ruleId": "brace-style",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 25,
    "endLine": 31,
    "line": 31,
    "message": "Identifier 'external_module' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 22,
    "endLine": 33,
    "line": 33,
    "message": "Identifier 'my_favorite_color' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 22,
    "endLine": 35,
    "line": 35,
    "message": "Identifier 'do_something' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 17,
    "endLine": 39,
    "line": 39,
    "message": "Identifier 'do_something' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 38,
    "endLine": 43,
    "line": 43,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 39,
    "endColumn": 52,
    "endLine": 47,
    "line": 47,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 27,
    "endColumn": 40,
    "endLine": 51,
    "line": 51,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 10,
    "endLine": 56,
    "line": 56,
    "message": "Identifier 'my_pref' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 18,
    "endLine": 59,
    "line": 59,
    "message": "Identifier 'category_id' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 25,
    "endLine": 61,
    "line": 61,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 19,
    "endLine": 63,
    "line": 63,
    "message": "Identifier 'bar_baz' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        859,
        859,
      ],
      "text": ",",
    },
    "line": 69,
    "message": "Missing trailing comma.",
    "messageId": "missing",
    "nodeType": "Property",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 47,
    "fix": Object {
      "range": Array [
        910,
        911,
      ],
      "text": "",
    },
    "line": 72,
    "message": "Unexpected trailing comma.",
    "messageId": "unexpected",
    "nodeType": "Property",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 29,
    "fix": Object {
      "range": Array [
        944,
        945,
      ],
      "text": "",
    },
    "line": 74,
    "message": "Unexpected trailing comma.",
    "messageId": "unexpected",
    "nodeType": "Literal",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 31,
    "fix": Object {
      "range": Array [
        945,
        946,
      ],
      "text": "",
    },
    "line": 74,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 4,
    "fix": Object {
      "range": Array [
        982,
        982,
      ],
      "text": ",",
    },
    "line": 78,
    "message": "Missing trailing comma.",
    "messageId": "missing",
    "nodeType": "Literal",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        1020,
        1020,
      ],
      "text": ",",
    },
    "line": 83,
    "message": "Missing trailing comma.",
    "messageId": "missing",
    "nodeType": "Property",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 15,
    "endLine": 88,
    "fix": Object {
      "range": Array [
        1056,
        1057,
      ],
      "text": "",
    },
    "line": 88,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 25,
    "endLine": 89,
    "fix": Object {
      "range": Array [
        1085,
        1086,
      ],
      "text": "",
    },
    "line": 89,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 36,
    "fix": Object {
      "range": Array [
        1098,
        1098,
      ],
      "text": " ",
    },
    "line": 89,
    "message": "A space is required before '}'.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 17,
    "endLine": 90,
    "fix": Object {
      "range": Array [
        1115,
        1116,
      ],
      "text": "",
    },
    "line": 90,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 17,
    "endLine": 90,
    "fix": Object {
      "range": Array [
        1117,
        1117,
      ],
      "text": " ",
    },
    "line": 90,
    "message": "A space is required after ','.",
    "messageId": "missing",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 12,
    "endLine": 91,
    "fix": Object {
      "range": Array [
        1130,
        1131,
      ],
      "text": "",
    },
    "line": 91,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 12,
    "endLine": 91,
    "fix": Object {
      "range": Array [
        1132,
        1132,
      ],
      "text": " ",
    },
    "line": 91,
    "message": "A space is required after ','.",
    "messageId": "missing",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 29,
    "endColumn": 30,
    "endLine": 92,
    "fix": Object {
      "range": Array [
        1165,
        1165,
      ],
      "text": " ",
    },
    "line": 92,
    "message": "A space is required after ','.",
    "messageId": "missing",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 29,
    "endColumn": 30,
    "endLine": 92,
    "fix": Object {
      "range": Array [
        1163,
        1164,
      ],
      "text": "",
    },
    "line": 92,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 6,
    "fix": Object {
      "range": Array [
        1231,
        1238,
      ],
      "text": ",
     ",
    },
    "line": 99,
    "message": "',' should be placed last.",
    "messageId": "expectedCommaLast",
    "nodeType": "Property",
    "ruleId": "comma-style",
    "severity": 2,
  },
  Object {
    "column": 9,
    "fix": Object {
      "range": Array [
        1289,
        1290,
      ],
      "text": "",
    },
    "line": 105,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 4,
    "fix": Object {
      "range": Array [
        1297,
        1298,
      ],
      "text": "",
    },
    "line": 106,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 11,
    "fix": Object {
      "range": Array [
        1317,
        1318,
      ],
      "text": "",
    },
    "line": 107,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "Property",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 15,
    "fix": Object {
      "range": Array [
        1319,
        1320,
      ],
      "text": "",
    },
    "line": 107,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "Property",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 8,
    "fix": Object {
      "range": Array [
        1336,
        1337,
      ],
      "text": "",
    },
    "line": 108,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        1340,
        1341,
      ],
      "text": "",
    },
    "line": 108,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        1369,
        1370,
      ],
      "text": "",
    },
    "line": 111,
    "message": "Unexpected newline between function name and paren.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "func-call-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "line": 113,
    "message": "Unexpected newline between function name and paren.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "func-call-spacing",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 34,
    "endLine": 117,
    "line": 117,
    "message": "Unexpected unnamed function.",
    "messageId": "unnamed",
    "nodeType": "FunctionExpression",
    "ruleId": "func-names",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 122,
    "fix": Object {
      "range": Array [
        1495,
        1496,
      ],
      "text": "",
    },
    "line": 122,
    "message": "Unexpected newline before '('.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 126,
    "fix": Object {
      "range": Array [
        1544,
        1545,
      ],
      "text": "",
    },
    "line": 126,
    "message": "Unexpected newline before '('.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 7,
    "endLine": 130,
    "fix": Object {
      "range": Array [
        1590,
        1590,
      ],
      "text": "
",
    },
    "line": 130,
    "message": "Expected newline before ')'.",
    "messageId": "expectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 7,
    "endLine": 134,
    "fix": Object {
      "range": Array [
        1630,
        1630,
      ],
      "text": "
",
    },
    "line": 134,
    "message": "Expected newline before ')'.",
    "messageId": "expectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 138,
    "fix": Object {
      "range": Array [
        1657,
        1657,
      ],
      "text": "  ",
    },
    "line": 138,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Keyword",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 140,
    "fix": Object {
      "range": Array [
        1678,
        1678,
      ],
      "text": "  ",
    },
    "line": 140,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Keyword",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 145,
    "fix": Object {
      "range": Array [
        1711,
        1711,
      ],
      "text": "  ",
    },
    "line": 145,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 149,
    "fix": Object {
      "range": Array [
        1738,
        1738,
      ],
      "text": "  ",
    },
    "line": 149,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 150,
    "fix": Object {
      "range": Array [
        1743,
        1743,
      ],
      "text": "  ",
    },
    "line": 150,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 155,
    "fix": Object {
      "range": Array [
        1789,
        1793,
      ],
      "text": "  ",
    },
    "line": 155,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 161,
    "fix": Object {
      "range": Array [
        1857,
        1861,
      ],
      "text": "  ",
    },
    "line": 161,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 165,
    "fix": Object {
      "range": Array [
        1881,
        1885,
      ],
      "text": "  ",
    },
    "line": 165,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 166,
    "fix": Object {
      "range": Array [
        1890,
        1896,
      ],
      "text": "  ",
    },
    "line": 166,
    "message": "Expected indentation of 2 spaces but found 6.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 167,
    "fix": Object {
      "range": Array [
        1900,
        1901,
      ],
      "text": "",
    },
    "line": 167,
    "message": "Unexpected newline before '('.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 170,
    "fix": Object {
      "range": Array [
        1922,
        1926,
      ],
      "text": "  ",
    },
    "line": 170,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 171,
    "fix": Object {
      "range": Array [
        1931,
        1931,
      ],
      "text": "  ",
    },
    "line": 171,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 172,
    "fix": Object {
      "range": Array [
        1936,
        1942,
      ],
      "text": "  ",
    },
    "line": 172,
    "message": "Expected indentation of 2 spaces but found 6.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 176,
    "fix": Object {
      "range": Array [
        1969,
        1973,
      ],
      "text": "  ",
    },
    "line": 176,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 177,
    "fix": Object {
      "range": Array [
        1981,
        1981,
      ],
      "text": "  ",
    },
    "line": 177,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 178,
    "fix": Object {
      "range": Array [
        1989,
        1995,
      ],
      "text": "  ",
    },
    "line": 178,
    "message": "Expected indentation of 2 spaces but found 6.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 182,
    "fix": Object {
      "range": Array [
        2028,
        2028,
      ],
      "text": "  ",
    },
    "line": 182,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 184,
    "fix": Object {
      "range": Array [
        2043,
        2043,
      ],
      "text": "  ",
    },
    "line": 184,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 16,
    "fix": Object {
      "range": Array [
        2060,
        2065,
      ],
      "text": " =  ",
    },
    "line": 186,
    "message": "There should be no line break before or after '='.",
    "nodeType": "VariableDeclarator",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        2074,
        2079,
      ],
      "text": "
  : ",
    },
    "line": 187,
    "message": "':' should be placed at the beginning of the line.",
    "nodeType": "ConditionalExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 3,
    "endLine": 188,
    "fix": Object {
      "range": Array [
        2077,
        2079,
      ],
      "text": "    ",
    },
    "line": 188,
    "message": "Expected indentation of 4 spaces but found 2.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 20,
    "fix": Object {
      "range": Array [
        2121,
        2121,
      ],
      "text": " ",
    },
    "line": 192,
    "message": "A space is required after '{'.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 25,
    "fix": Object {
      "range": Array [
        2125,
        2125,
      ],
      "text": " ",
    },
    "line": 192,
    "message": "Missing space before value for key 'key'.",
    "messageId": "missingValue",
    "nodeType": "Literal",
    "ruleId": "key-spacing",
    "severity": 2,
  },
  Object {
    "column": 32,
    "fix": Object {
      "range": Array [
        2132,
        2132,
      ],
      "text": " ",
    },
    "line": 192,
    "message": "A space is required before '}'.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        2188,
        2194,
      ],
      "text": "",
    },
    "line": 195,
    "message": "Extra space before value for key 'key'.",
    "messageId": "extraValue",
    "nodeType": "Literal",
    "ruleId": "key-spacing",
    "severity": 2,
  },
  Object {
    "column": 17,
    "endColumn": 18,
    "endLine": 200,
    "fix": Object {
      "range": Array [
        2244,
        2244,
      ],
      "text": "
",
    },
    "line": 200,
    "message": "Closing curly brace appears on the same line as the subsequent block.",
    "messageId": "sameLineClose",
    "nodeType": "Punctuator",
    "ruleId": "brace-style",
    "severity": 2,
  },
  Object {
    "column": 18,
    "fix": Object {
      "range": Array [
        2244,
        2244,
      ],
      "text": " ",
    },
    "line": 200,
    "message": "Expected space(s) before \\"else\\".",
    "messageId": "expectedBefore",
    "nodeType": null,
    "ruleId": "keyword-spacing",
    "severity": 2,
  },
  Object {
    "column": 44,
    "endColumn": 45,
    "endLine": 200,
    "fix": Object {
      "range": Array [
        2271,
        2271,
      ],
      "text": "
",
    },
    "line": 200,
    "message": "Closing curly brace appears on the same line as the subsequent block.",
    "messageId": "sameLineClose",
    "nodeType": "Punctuator",
    "ruleId": "brace-style",
    "severity": 2,
  },
  Object {
    "column": 45,
    "fix": Object {
      "range": Array [
        2271,
        2271,
      ],
      "text": " ",
    },
    "line": 200,
    "message": "Expected space(s) before \\"else\\".",
    "messageId": "expectedBefore",
    "nodeType": null,
    "ruleId": "keyword-spacing",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 210,
    "fix": Object {
      "range": Array [
        2349,
        2349,
      ],
      "text": "
",
    },
    "line": 208,
    "message": "Expected blank line between class members.",
    "messageId": "always",
    "nodeType": "MethodDefinition",
    "ruleId": "lines-between-class-members",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 211,
    "fix": Object {
      "range": Array [
        2375,
        2375,
      ],
      "text": "
",
    },
    "line": 211,
    "message": "Expected blank line between class members.",
    "messageId": "always",
    "nodeType": "MethodDefinition",
    "ruleId": "lines-between-class-members",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 15,
    "endLine": 212,
    "fix": Object {
      "range": Array [
        2386,
        2386,
      ],
      "text": "
",
    },
    "line": 212,
    "message": "Expected blank line between class members.",
    "messageId": "always",
    "nodeType": "MethodDefinition",
    "ruleId": "lines-between-class-members",
    "severity": 2,
  },
  Object {
    "column": 1,
    "line": 218,
    "message": "This line has a length of 448. Maximum allowed is 100.",
    "messageId": "max",
    "nodeType": "Program",
    "ruleId": "max-len",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 19,
    "endLine": 223,
    "line": 223,
    "message": "Function 'maxParams' has too many parameters (4). Maximum allowed is 3.",
    "messageId": "exceed",
    "nodeType": "FunctionDeclaration",
    "ruleId": "max-params",
    "severity": 2,
  },
  Object {
    "column": 18,
    "line": 229,
    "message": "A constructor name should not start with a lowercase letter.",
    "messageId": "lower",
    "nodeType": "NewExpression",
    "ruleId": "new-cap",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 27,
    "endLine": 233,
    "fix": Object {
      "range": Array [
        3022,
        3022,
      ],
      "text": "()",
    },
    "line": 233,
    "message": "Missing '()' invoking a constructor.",
    "messageId": "missing",
    "nodeType": "NewExpression",
    "ruleId": "new-parens",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 35,
    "endLine": 234,
    "fix": Object {
      "range": Array [
        3058,
        3058,
      ],
      "text": "()",
    },
    "line": 234,
    "message": "Missing '()' invoking a constructor.",
    "messageId": "missing",
    "nodeType": "NewExpression",
    "ruleId": "new-parens",
    "severity": 2,
  },
  Object {
    "column": 24,
    "fix": Object {
      "range": Array [
        3112,
        3112,
      ],
      "text": "
",
    },
    "line": 238,
    "message": "Expected line break before \`.final\`.",
    "messageId": "expected",
    "nodeType": "Identifier",
    "ruleId": "newline-per-chained-call",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 26,
    "endLine": 242,
    "line": 242,
    "message": "The array literal notation [] is preferable.",
    "messageId": "preferLiteral",
    "nodeType": "NewExpression",
    "ruleId": "no-array-constructor",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 20,
    "endLine": 246,
    "line": 246,
    "message": "Unexpected use of '|'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 16,
    "endLine": 247,
    "line": 247,
    "message": "Unexpected use of '&'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 16,
    "endLine": 248,
    "line": 248,
    "message": "Unexpected use of '^'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 14,
    "endLine": 250,
    "line": 250,
    "message": "Unexpected use of '~'.",
    "messageId": "unexpected",
    "nodeType": "UnaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 14,
    "endLine": 250,
    "fix": Object {
      "range": Array [
        3258,
        3259,
      ],
      "text": "",
    },
    "line": 250,
    "message": "Unexpected space after unary operator '~'.",
    "messageId": "unexpectedAfter",
    "nodeType": "UnaryExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 17,
    "endLine": 252,
    "line": 252,
    "message": "Unexpected use of '<<'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 17,
    "endLine": 253,
    "line": 253,
    "message": "Unexpected use of '>>'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 18,
    "endLine": 254,
    "line": 254,
    "message": "Unexpected use of '>>>'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 255,
    "line": 255,
    "message": "Unexpected use of '|='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 256,
    "line": 256,
    "message": "Unexpected use of '&='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 257,
    "line": 257,
    "message": "Unexpected use of '^='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 258,
    "line": 258,
    "message": "Unexpected use of '<<='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 259,
    "line": 259,
    "message": "Unexpected use of '>>='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 15,
    "endLine": 260,
    "line": 260,
    "message": "Unexpected use of '>>>='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 28,
    "endLine": 264,
    "line": 264,
    "message": "Unary operator '++' used.",
    "nodeType": "UpdateExpression",
    "ruleId": "no-plusplus",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 14,
    "endLine": 266,
    "line": 266,
    "message": "Unexpected use of continue statement.",
    "messageId": "unexpected",
    "nodeType": "ContinueStatement",
    "ruleId": "no-continue",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 280,
    "fix": Object {
      "range": Array [
        3552,
        3596,
      ],
      "text": "if (anotherCondition) {
    // ...
  }",
    },
    "line": 278,
    "message": "Unexpected if as the only statement in an else block.",
    "nodeType": "IfStatement",
    "ruleId": "no-lonely-if",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 292,
    "fix": Object {
      "range": Array [
        3631,
        3699,
      ],
      "text": "if (anotherCondition) {
    // ...
  }
  else {
    // ...
  }",
    },
    "line": 287,
    "message": "Unexpected if as the only statement in an else block.",
    "nodeType": "IfStatement",
    "ruleId": "no-lonely-if",
    "severity": 2,
  },
  Object {
    "column": 24,
    "line": 297,
    "message": "Unexpected mix of '&&' and '||'.",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 33,
    "line": 297,
    "message": "Unexpected mix of '&&' and '||'.",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 298,
    "message": "Unexpected mix of '+' and '*'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "line": 298,
    "message": "Unexpected mix of '+' and '*'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 300,
    "message": "Unexpected mix of '%' and '**'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "line": 300,
    "message": "Unexpected mix of '%' and '**'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 301,
    "message": "Unexpected mix of '%' and '+'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "line": 301,
    "message": "Unexpected mix of '%' and '+'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 302,
    "message": "Unexpected mix of '%' and '-'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "line": 302,
    "message": "Unexpected mix of '%' and '-'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 305,
    "message": "Unexpected mix of '**' and '+'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 305,
    "message": "Unexpected mix of '**' and '+'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 306,
    "message": "Unexpected mix of '**' and '-'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 306,
    "message": "Unexpected mix of '**' and '-'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 307,
    "message": "Unexpected mix of '**' and '*'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 307,
    "message": "Unexpected mix of '**' and '*'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 308,
    "message": "Unexpected mix of '**' and '/'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 308,
    "message": "Unexpected mix of '**' and '/'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 309,
    "message": "Unexpected mix of '&&' and '||'.",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 309,
    "message": "Unexpected mix of '&&' and '||'.",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 57,
    "endLine": 313,
    "line": 313,
    "message": "Unexpected chained assignment.",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-multi-assign",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 318,
    "fix": Object {
      "range": Array [
        4176,
        4178,
      ],
      "text": "",
    },
    "line": 314,
    "message": "More than 2 blank lines not allowed.",
    "nodeType": "Program",
    "ruleId": "no-multiple-empty-lines",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 60,
    "endLine": 322,
    "line": 322,
    "message": "Do not nest ternary expressions.",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-nested-ternary",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 26,
    "endLine": 326,
    "line": 326,
    "message": "The object literal notation {} is preferrable.",
    "nodeType": "NewExpression",
    "ruleId": "no-new-object",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 331,
    "line": 331,
    "message": "Unary operator '++' used.",
    "nodeType": "UpdateExpression",
    "ruleId": "no-plusplus",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 332,
    "line": 332,
    "message": "Unary operator '--' used.",
    "nodeType": "UpdateExpression",
    "ruleId": "no-plusplus",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 338,
    "line": 336,
    "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
    "nodeType": "ForInStatement",
    "ruleId": "no-restricted-syntax",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 342,
    "line": 340,
    "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
    "nodeType": "ForOfStatement",
    "ruleId": "no-restricted-syntax",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 16,
    "endLine": 344,
    "line": 344,
    "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
    "nodeType": "LabeledStatement",
    "ruleId": "no-restricted-syntax",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 31,
    "endLine": 348,
    "line": 348,
    "message": "Unexpected dangling '_' in '_underscoreDangle'.",
    "nodeType": "VariableDeclarator",
    "ruleId": "no-underscore-dangle",
    "severity": 2,
  },
  Object {
    "column": 33,
    "fix": Object {
      "range": Array [
        4627,
        4649,
      ],
      "text": "x === 2",
    },
    "line": 352,
    "message": "Unnecessary use of boolean literals in conditional expression.",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-unneeded-ternary",
    "severity": 2,
  },
  Object {
    "column": 23,
    "fix": Object {
      "range": Array [
        4669,
        4685,
      ],
      "text": "!!x",
    },
    "line": 353,
    "message": "Unnecessary use of boolean literals in conditional expression.",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-unneeded-ternary",
    "severity": 2,
  },
  Object {
    "column": 25,
    "fix": Object {
      "range": Array [
        4707,
        4716,
      ],
      "text": "x || 1",
    },
    "line": 354,
    "message": "Unnecessary use of conditional expression for default assignment.",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-unneeded-ternary",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 10,
    "endLine": 358,
    "fix": Object {
      "range": Array [
        4757,
        4758,
      ],
      "text": "",
    },
    "line": 358,
    "message": "Unexpected whitespace before property bar.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 359,
    "fix": Object {
      "range": Array [
        4768,
        4770,
      ],
      "text": ".",
    },
    "line": 359,
    "message": "Unexpected whitespace before property bar.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 360,
    "fix": Object {
      "range": Array [
        4778,
        4780,
      ],
      "text": ".",
    },
    "line": 360,
    "message": "Unexpected whitespace before property bar.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 361,
    "fix": Object {
      "range": Array [
        4788,
        4790,
      ],
      "text": ".",
    },
    "line": 361,
    "message": "Unexpected whitespace before property bar.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 361,
    "fix": Object {
      "range": Array [
        4793,
        4795,
      ],
      "text": ".",
    },
    "line": 361,
    "message": "Unexpected whitespace before property baz.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 362,
    "fix": Object {
      "range": Array [
        4803,
        4805,
      ],
      "text": ".",
    },
    "line": 362,
    "message": "Unexpected whitespace before property bar.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 365,
    "fix": Object {
      "range": Array [
        4833,
        4835,
      ],
      "text": ".",
    },
    "line": 364,
    "message": "Unexpected whitespace before property baz.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 370,
    "fix": Object {
      "range": Array [
        4888,
        4891,
      ],
      "text": " ",
    },
    "line": 370,
    "message": "Expected no linebreak before this statement.",
    "nodeType": "ExpressionStatement",
    "ruleId": "nonblock-statement-body-position",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 372,
    "fix": Object {
      "range": Array [
        4902,
        4905,
      ],
      "text": " ",
    },
    "line": 372,
    "message": "Expected no linebreak before this statement.",
    "nodeType": "ExpressionStatement",
    "ruleId": "nonblock-statement-body-position",
    "severity": 2,
  },
  Object {
    "column": 20,
    "fix": Object {
      "range": Array [
        4958,
        4958,
      ],
      "text": "
",
    },
    "line": 376,
    "message": "Expected a line break after this opening brace.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 56,
    "fix": Object {
      "range": Array [
        4993,
        4993,
      ],
      "text": "
",
    },
    "line": 376,
    "message": "Expected a line break before this closing brace.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        5035,
        5035,
      ],
      "text": "
",
    },
    "line": 379,
    "message": "Expected a line break after this opening brace.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        5035,
        5035,
      ],
      "text": " ",
    },
    "line": 379,
    "message": "A space is required after '{'.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 48,
    "fix": Object {
      "range": Array [
        5068,
        5068,
      ],
      "text": "
",
    },
    "line": 379,
    "message": "Expected a line break before this closing brace.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 48,
    "fix": Object {
      "range": Array [
        5068,
        5068,
      ],
      "text": " ",
    },
    "line": 379,
    "message": "A space is required before '}'.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 15,
    "endLine": 384,
    "fix": Object {
      "range": Array [
        5101,
        5105,
      ],
      "text": ";
  const ",
    },
    "line": 383,
    "message": "Split 'const' declarations into multiple statements.",
    "nodeType": "VariableDeclaration",
    "ruleId": "one-var",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 33,
    "endLine": 387,
    "fix": Object {
      "range": Array [
        5168,
        5169,
      ],
      "text": "; let",
    },
    "line": 387,
    "message": "Split 'let' declarations into multiple statements.",
    "nodeType": "VariableDeclaration",
    "ruleId": "one-var",
    "severity": 2,
  },
  Object {
    "column": 20,
    "fix": Object {
      "range": Array [
        5170,
        5170,
      ],
      "text": "
",
    },
    "line": 387,
    "message": "Expected variable declaration to be on a new line.",
    "nodeType": "VariableDeclaration",
    "ruleId": "one-var-declaration-per-line",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 18,
    "endLine": 392,
    "fix": Object {
      "range": Array [
        5224,
        5241,
      ],
      "text": "value += y",
    },
    "line": 392,
    "message": "Assignment can be replaced with operator assignment.",
    "messageId": "replaced",
    "nodeType": "AssignmentExpression",
    "ruleId": "operator-assignment",
    "severity": 2,
  },
  Object {
    "column": 12,
    "fix": Object {
      "range": Array [
        5276,
        5281,
      ],
      "text": "
  + ",
    },
    "line": 396,
    "message": "'+' should be placed at the beginning of the line.",
    "nodeType": "BinaryExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 15,
    "fix": Object {
      "range": Array [
        5301,
        5307,
      ],
      "text": "
  || ",
    },
    "line": 400,
    "message": "'||' should be placed at the beginning of the line.",
    "nodeType": "LogicalExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 11,
    "fix": Object {
      "range": Array [
        5369,
        5371,
      ],
      "text": "
",
    },
    "line": 408,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "BlockStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        5383,
        5385,
      ],
      "text": "
",
    },
    "line": 412,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "BlockStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 19,
    "fix": Object {
      "range": Array [
        5407,
        5409,
      ],
      "text": "
",
    },
    "line": 414,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "ClassBody",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        5420,
        5422,
      ],
      "text": "
",
    },
    "line": 418,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "ClassBody",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 16,
    "fix": Object {
      "range": Array [
        5442,
        5444,
      ],
      "text": "
",
    },
    "line": 421,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "SwitchStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        5474,
        5476,
      ],
      "text": "
",
    },
    "line": 426,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "SwitchStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 19,
    "endColumn": 44,
    "endLine": 430,
    "fix": Object {
      "range": Array [
        5522,
        5547,
      ],
      "text": "{ ...object}",
    },
    "line": 430,
    "message": "Use an object spread instead of \`Object.assign\` eg: \`{ ...foo }\`.",
    "messageId": "useSpreadMessage",
    "nodeType": "CallExpression",
    "ruleId": "prefer-object-spread",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 435,
    "fix": Object {
      "range": Array [
        5587,
        5590,
      ],
      "text": "\\"one\\"",
    },
    "line": 435,
    "message": "Inconsistently quoted property 'one' found.",
    "nodeType": "Property",
    "ruleId": "quote-props",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 436,
    "fix": Object {
      "range": Array [
        5597,
        5600,
      ],
      "text": "\\"two\\"",
    },
    "line": 436,
    "message": "Inconsistently quoted property 'two' found.",
    "nodeType": "Property",
    "ruleId": "quote-props",
    "severity": 2,
  },
  Object {
    "column": 22,
    "endColumn": 30,
    "endLine": 442,
    "fix": Object {
      "range": Array [
        5660,
        5668,
      ],
      "text": "'string'",
    },
    "line": 442,
    "message": "Strings must use singlequote.",
    "nodeType": "Literal",
    "ruleId": "quotes",
    "severity": 2,
  },
  Object {
    "column": 21,
    "fix": Object {
      "range": Array [
        5700,
        5700,
      ],
      "text": ";",
    },
    "line": 446,
    "message": "Missing semicolon.",
    "nodeType": "VariableDeclaration",
    "ruleId": "semi",
    "severity": 2,
  },
  Object {
    "column": 19,
    "fix": Object {
      "range": Array [
        5718,
        5719,
      ],
      "text": "",
    },
    "line": 447,
    "message": "Unexpected whitespace before semicolon.",
    "nodeType": "ExpressionStatement",
    "ruleId": "semi-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 449,
    "line": 449,
    "message": "Expected this semicolon to be at the end of the previous line.",
    "nodeType": null,
    "ruleId": "semi-style",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 17,
    "endLine": 453,
    "fix": Object {
      "range": Array [
        5793,
        5793,
      ],
      "text": " ",
    },
    "line": 453,
    "message": "Missing space before opening brace.",
    "nodeType": "BlockStatement",
    "ruleId": "space-before-blocks",
    "severity": 2,
  },
  Object {
    "column": 25,
    "fix": Object {
      "range": Array [
        5853,
        5854,
      ],
      "text": "",
    },
    "line": 457,
    "message": "Unexpected space before function parentheses.",
    "nodeType": "FunctionDeclaration",
    "ruleId": "space-before-function-paren",
    "severity": 2,
  },
  Object {
    "column": 35,
    "fix": Object {
      "range": Array [
        5894,
        5895,
      ],
      "text": "",
    },
    "line": 458,
    "message": "Unexpected space before function parentheses.",
    "nodeType": "FunctionExpression",
    "ruleId": "space-before-function-paren",
    "severity": 2,
  },
  Object {
    "column": 33,
    "fix": Object {
      "range": Array [
        5934,
        5934,
      ],
      "text": " ",
    },
    "line": 459,
    "message": "Missing space before function parentheses.",
    "nodeType": "ArrowFunctionExpression",
    "ruleId": "space-before-function-paren",
    "severity": 2,
  },
  Object {
    "column": 4,
    "fix": Object {
      "range": Array [
        5968,
        5969,
      ],
      "text": "",
    },
    "line": 463,
    "message": "There should be no spaces inside this paren.",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        5976,
        5977,
      ],
      "text": "",
    },
    "line": 463,
    "message": "There should be no spaces inside this paren.",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 2,
    "fix": Object {
      "range": Array [
        6002,
        6003,
      ],
      "text": " + ",
    },
    "line": 467,
    "message": "Operator '+' must be spaced.",
    "nodeType": "BinaryExpression",
    "ruleId": "space-infix-ops",
    "severity": 2,
  },
  Object {
    "column": 2,
    "fix": Object {
      "range": Array [
        6007,
        6008,
      ],
      "text": " ? ",
    },
    "line": 468,
    "message": "Operator '?' must be spaced.",
    "nodeType": "ConditionalExpression",
    "ruleId": "space-infix-ops",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 16,
    "endLine": 472,
    "fix": Object {
      "range": Array [
        6040,
        6040,
      ],
      "text": " ",
    },
    "line": 472,
    "message": "Unary word operator 'delete' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "UnaryExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 23,
    "endLine": 473,
    "fix": Object {
      "range": Array [
        6066,
        6066,
      ],
      "text": " ",
    },
    "line": 473,
    "message": "Unary word operator 'new' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "NewExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 476,
    "fix": Object {
      "range": Array [
        6104,
        6104,
      ],
      "text": " ",
    },
    "line": 476,
    "message": "Unary word operator 'yield' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "YieldExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 13,
    "endLine": 480,
    "fix": Object {
      "range": Array [
        6147,
        6147,
      ],
      "text": " ",
    },
    "line": 480,
    "message": "Unary word operator 'await' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "AwaitExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 17,
    "endLine": 485,
    "fix": Object {
      "range": Array [
        6178,
        6178,
      ],
      "text": " ",
    },
    "line": 485,
    "message": "Expected space or tab after '//' in comment.",
    "nodeType": "Line",
    "ruleId": "spaced-comment",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 19,
    "endLine": 486,
    "fix": Object {
      "range": Array [
        6195,
        6195,
      ],
      "text": " ",
    },
    "line": 486,
    "message": "Expected space or tab after '/*' in comment.",
    "nodeType": "Block",
    "ruleId": "spaced-comment",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 491,
    "fix": Object {
      "range": Array [
        6273,
        6274,
      ],
      "text": "",
    },
    "line": 491,
    "message": "Unexpected space(s) before this colon.",
    "messageId": "unexpectedBefore",
    "nodeType": "SwitchCase",
    "ruleId": "switch-colon-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        6318,
        6319,
      ],
      "text": "",
    },
    "line": 496,
    "message": "Unexpected space between template tag and template literal.",
    "messageId": "unexpected",
    "nodeType": "TaggedTemplateExpression",
    "ruleId": "template-tag-spacing",
    "severity": 2,
  },
]
`;

exports[`ESLint style should pass 1`] = `Array []`;
