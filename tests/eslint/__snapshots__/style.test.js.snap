// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESLint style should fail 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 4,
    "fix": Object {
      "range": Array [
        61,
        62,
      ],
      "text": "",
    },
    "line": 4,
    "message": "There should be no linebreak before ']'.",
    "messageId": "unexpectedClosingLinebreak",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-newline",
    "severity": 2,
  },
  Object {
    "column": 4,
    "endColumn": 5,
    "endLine": 6,
    "fix": Object {
      "range": Array [
        78,
        78,
      ],
      "text": "
",
    },
    "line": 6,
    "message": "A linebreak is required before ']'.",
    "messageId": "missingClosingLinebreak",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-newline",
    "severity": 2,
  },
  Object {
    "column": 9,
    "fix": Object {
      "range": Array [
        90,
        91,
      ],
      "text": "",
    },
    "line": 7,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 16,
    "fix": Object {
      "range": Array [
        95,
        96,
      ],
      "text": "",
    },
    "line": 7,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 17,
    "fix": Object {
      "range": Array [
        97,
        97,
      ],
      "text": ";",
    },
    "line": 7,
    "message": "Missing semicolon.",
    "nodeType": "VariableDeclaration",
    "ruleId": "semi",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 6,
    "endLine": 12,
    "fix": Object {
      "range": Array [
        139,
        140,
      ],
      "text": "
",
    },
    "line": 12,
    "message": "There should be a linebreak after this element.",
    "messageId": "missingLineBreak",
    "nodeType": null,
    "ruleId": "array-element-newline",
    "severity": 2,
  },
  Object {
    "column": 16,
    "fix": Object {
      "range": Array [
        186,
        186,
      ],
      "text": " ",
    },
    "line": 18,
    "message": "Requires a space after '{'.",
    "messageId": "missing",
    "nodeType": "BlockStatement",
    "ruleId": "block-spacing",
    "severity": 2,
  },
  Object {
    "column": 29,
    "fix": Object {
      "range": Array [
        198,
        198,
      ],
      "text": " ",
    },
    "line": 18,
    "message": "Requires a space before '}'.",
    "messageId": "missing",
    "nodeType": "BlockStatement",
    "ruleId": "block-spacing",
    "severity": 2,
  },
  Object {
    "column": 20,
    "fix": Object {
      "range": Array [
        219,
        219,
      ],
      "text": " ",
    },
    "line": 19,
    "message": "Requires a space before '}'.",
    "messageId": "missing",
    "nodeType": "BlockStatement",
    "ruleId": "block-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 25,
    "fix": Object {
      "range": Array [
        259,
        259,
      ],
      "text": "
",
    },
    "line": 25,
    "message": "Closing curly brace appears on the same line as the subsequent block.",
    "messageId": "sameLineClose",
    "nodeType": "Punctuator",
    "ruleId": "brace-style",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 25,
    "endLine": 31,
    "line": 31,
    "message": "Identifier 'external_module' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 22,
    "endLine": 33,
    "line": 33,
    "message": "Identifier 'my_favorite_color' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 22,
    "endLine": 35,
    "line": 35,
    "message": "Identifier 'do_something' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 17,
    "endLine": 39,
    "line": 39,
    "message": "Identifier 'do_something' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 38,
    "endLine": 43,
    "line": 43,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 39,
    "endColumn": 52,
    "endLine": 47,
    "line": 47,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 27,
    "endColumn": 40,
    "endLine": 51,
    "line": 51,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 10,
    "endLine": 56,
    "line": 56,
    "message": "Identifier 'my_pref' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 18,
    "endLine": 59,
    "line": 59,
    "message": "Identifier 'category_id' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 25,
    "endLine": 61,
    "line": 61,
    "message": "Identifier 'no_camelcased' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 19,
    "endLine": 63,
    "line": 63,
    "message": "Identifier 'bar_baz' is not in camel case.",
    "messageId": "notCamelCase",
    "nodeType": "Identifier",
    "ruleId": "camelcase",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        859,
        859,
      ],
      "text": ",",
    },
    "line": 69,
    "message": "Missing trailing comma.",
    "messageId": "missing",
    "nodeType": "Property",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 47,
    "fix": Object {
      "range": Array [
        910,
        911,
      ],
      "text": "",
    },
    "line": 72,
    "message": "Unexpected trailing comma.",
    "messageId": "unexpected",
    "nodeType": "Property",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 29,
    "fix": Object {
      "range": Array [
        944,
        945,
      ],
      "text": "",
    },
    "line": 74,
    "message": "Unexpected trailing comma.",
    "messageId": "unexpected",
    "nodeType": "Literal",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 31,
    "fix": Object {
      "range": Array [
        945,
        946,
      ],
      "text": "",
    },
    "line": 74,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "ArrayExpression",
    "ruleId": "array-bracket-spacing",
    "severity": 2,
  },
  Object {
    "column": 4,
    "fix": Object {
      "range": Array [
        982,
        982,
      ],
      "text": ",",
    },
    "line": 78,
    "message": "Missing trailing comma.",
    "messageId": "missing",
    "nodeType": "Literal",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        1020,
        1020,
      ],
      "text": ",",
    },
    "line": 83,
    "message": "Missing trailing comma.",
    "messageId": "missing",
    "nodeType": "Property",
    "ruleId": "comma-dangle",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 15,
    "endLine": 88,
    "fix": Object {
      "range": Array [
        1056,
        1057,
      ],
      "text": "",
    },
    "line": 88,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 25,
    "endLine": 89,
    "fix": Object {
      "range": Array [
        1085,
        1086,
      ],
      "text": "",
    },
    "line": 89,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 36,
    "fix": Object {
      "range": Array [
        1098,
        1098,
      ],
      "text": " ",
    },
    "line": 89,
    "message": "A space is required before '}'.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 17,
    "endLine": 90,
    "fix": Object {
      "range": Array [
        1115,
        1116,
      ],
      "text": "",
    },
    "line": 90,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 17,
    "endLine": 90,
    "fix": Object {
      "range": Array [
        1117,
        1117,
      ],
      "text": " ",
    },
    "line": 90,
    "message": "A space is required after ','.",
    "messageId": "missing",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 12,
    "endLine": 91,
    "fix": Object {
      "range": Array [
        1132,
        1132,
      ],
      "text": " ",
    },
    "line": 91,
    "message": "A space is required after ','.",
    "messageId": "missing",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 12,
    "endLine": 91,
    "fix": Object {
      "range": Array [
        1130,
        1131,
      ],
      "text": "",
    },
    "line": 91,
    "message": "There should be no space before ','.",
    "messageId": "unexpected",
    "nodeType": "Punctuator",
    "ruleId": "comma-spacing",
    "severity": 2,
  },
  Object {
    "column": 6,
    "fix": Object {
      "range": Array [
        1196,
        1203,
      ],
      "text": ",
     ",
    },
    "line": 98,
    "message": "',' should be placed last.",
    "messageId": "expectedCommaLast",
    "nodeType": "Property",
    "ruleId": "comma-style",
    "severity": 2,
  },
  Object {
    "column": 9,
    "fix": Object {
      "range": Array [
        1254,
        1255,
      ],
      "text": "",
    },
    "line": 104,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 4,
    "fix": Object {
      "range": Array [
        1262,
        1263,
      ],
      "text": "",
    },
    "line": 105,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 11,
    "fix": Object {
      "range": Array [
        1282,
        1283,
      ],
      "text": "",
    },
    "line": 106,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "Property",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 15,
    "fix": Object {
      "range": Array [
        1284,
        1285,
      ],
      "text": "",
    },
    "line": 106,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "Property",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 8,
    "fix": Object {
      "range": Array [
        1301,
        1302,
      ],
      "text": "",
    },
    "line": 107,
    "message": "There should be no space after '['.",
    "messageId": "unexpectedSpaceAfter",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        1305,
        1306,
      ],
      "text": "",
    },
    "line": 107,
    "message": "There should be no space before ']'.",
    "messageId": "unexpectedSpaceBefore",
    "nodeType": "MemberExpression",
    "ruleId": "computed-property-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        1334,
        1335,
      ],
      "text": "",
    },
    "line": 110,
    "message": "Unexpected newline between function name and paren.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "func-call-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "line": 112,
    "message": "Unexpected newline between function name and paren.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "func-call-spacing",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 34,
    "endLine": 116,
    "line": 116,
    "message": "Unexpected unnamed function.",
    "messageId": "unnamed",
    "nodeType": "FunctionExpression",
    "ruleId": "func-names",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 121,
    "fix": Object {
      "range": Array [
        1460,
        1461,
      ],
      "text": "",
    },
    "line": 121,
    "message": "Unexpected newline before '('.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 125,
    "fix": Object {
      "range": Array [
        1509,
        1510,
      ],
      "text": "",
    },
    "line": 125,
    "message": "Unexpected newline before '('.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 7,
    "endLine": 129,
    "fix": Object {
      "range": Array [
        1555,
        1555,
      ],
      "text": "
",
    },
    "line": 129,
    "message": "Expected newline before ')'.",
    "messageId": "expectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 6,
    "endColumn": 7,
    "endLine": 133,
    "fix": Object {
      "range": Array [
        1595,
        1595,
      ],
      "text": "
",
    },
    "line": 133,
    "message": "Expected newline before ')'.",
    "messageId": "expectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 137,
    "fix": Object {
      "range": Array [
        1622,
        1622,
      ],
      "text": "  ",
    },
    "line": 137,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Keyword",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 139,
    "fix": Object {
      "range": Array [
        1643,
        1643,
      ],
      "text": "  ",
    },
    "line": 139,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Keyword",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 144,
    "fix": Object {
      "range": Array [
        1676,
        1676,
      ],
      "text": "  ",
    },
    "line": 144,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 148,
    "fix": Object {
      "range": Array [
        1703,
        1703,
      ],
      "text": "  ",
    },
    "line": 148,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 149,
    "fix": Object {
      "range": Array [
        1708,
        1708,
      ],
      "text": "  ",
    },
    "line": 149,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 154,
    "fix": Object {
      "range": Array [
        1754,
        1758,
      ],
      "text": "  ",
    },
    "line": 154,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 160,
    "fix": Object {
      "range": Array [
        1822,
        1826,
      ],
      "text": "  ",
    },
    "line": 160,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 164,
    "fix": Object {
      "range": Array [
        1846,
        1850,
      ],
      "text": "  ",
    },
    "line": 164,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 165,
    "fix": Object {
      "range": Array [
        1855,
        1861,
      ],
      "text": "  ",
    },
    "line": 165,
    "message": "Expected indentation of 2 spaces but found 6.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 166,
    "fix": Object {
      "range": Array [
        1865,
        1866,
      ],
      "text": "",
    },
    "line": 166,
    "message": "Unexpected newline before '('.",
    "messageId": "unexpectedBefore",
    "nodeType": "Punctuator",
    "ruleId": "function-paren-newline",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 169,
    "fix": Object {
      "range": Array [
        1887,
        1891,
      ],
      "text": "  ",
    },
    "line": 169,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 170,
    "fix": Object {
      "range": Array [
        1896,
        1896,
      ],
      "text": "  ",
    },
    "line": 170,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 171,
    "fix": Object {
      "range": Array [
        1901,
        1907,
      ],
      "text": "  ",
    },
    "line": 171,
    "message": "Expected indentation of 2 spaces but found 6.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 5,
    "endLine": 175,
    "fix": Object {
      "range": Array [
        1934,
        1938,
      ],
      "text": "  ",
    },
    "line": 175,
    "message": "Expected indentation of 2 spaces but found 4.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 176,
    "fix": Object {
      "range": Array [
        1946,
        1946,
      ],
      "text": "  ",
    },
    "line": 176,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 177,
    "fix": Object {
      "range": Array [
        1954,
        1960,
      ],
      "text": "  ",
    },
    "line": 177,
    "message": "Expected indentation of 2 spaces but found 6.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 181,
    "fix": Object {
      "range": Array [
        1993,
        1993,
      ],
      "text": "  ",
    },
    "line": 181,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 183,
    "fix": Object {
      "range": Array [
        2008,
        2008,
      ],
      "text": "  ",
    },
    "line": 183,
    "message": "Expected indentation of 2 spaces but found 0.",
    "messageId": "wrongIndentation",
    "nodeType": "Punctuator",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 16,
    "fix": Object {
      "range": Array [
        2025,
        2030,
      ],
      "text": " =  ",
    },
    "line": 185,
    "message": "There should be no line break before or after '='.",
    "nodeType": "VariableDeclarator",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        2039,
        2044,
      ],
      "text": "
  : ",
    },
    "line": 186,
    "message": "':' should be placed at the beginning of the line.",
    "nodeType": "ConditionalExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 3,
    "endLine": 187,
    "fix": Object {
      "range": Array [
        2042,
        2044,
      ],
      "text": "    ",
    },
    "line": 187,
    "message": "Expected indentation of 4 spaces but found 2.",
    "messageId": "wrongIndentation",
    "nodeType": "Identifier",
    "ruleId": "indent",
    "severity": 2,
  },
  Object {
    "column": 20,
    "fix": Object {
      "range": Array [
        2086,
        2086,
      ],
      "text": " ",
    },
    "line": 191,
    "message": "A space is required after '{'.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 25,
    "fix": Object {
      "range": Array [
        2090,
        2090,
      ],
      "text": " ",
    },
    "line": 191,
    "message": "Missing space before value for key 'key'.",
    "messageId": "missingValue",
    "nodeType": "Literal",
    "ruleId": "key-spacing",
    "severity": 2,
  },
  Object {
    "column": 32,
    "fix": Object {
      "range": Array [
        2097,
        2097,
      ],
      "text": " ",
    },
    "line": 191,
    "message": "A space is required before '}'.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        2153,
        2159,
      ],
      "text": "",
    },
    "line": 194,
    "message": "Extra space before value for key 'key'.",
    "messageId": "extraValue",
    "nodeType": "Literal",
    "ruleId": "key-spacing",
    "severity": 2,
  },
  Object {
    "column": 17,
    "endColumn": 18,
    "endLine": 199,
    "fix": Object {
      "range": Array [
        2209,
        2209,
      ],
      "text": "
",
    },
    "line": 199,
    "message": "Closing curly brace appears on the same line as the subsequent block.",
    "messageId": "sameLineClose",
    "nodeType": "Punctuator",
    "ruleId": "brace-style",
    "severity": 2,
  },
  Object {
    "column": 18,
    "fix": Object {
      "range": Array [
        2209,
        2209,
      ],
      "text": " ",
    },
    "line": 199,
    "message": "Expected space(s) before \\"else\\".",
    "messageId": "expectedBefore",
    "nodeType": null,
    "ruleId": "keyword-spacing",
    "severity": 2,
  },
  Object {
    "column": 44,
    "endColumn": 45,
    "endLine": 199,
    "fix": Object {
      "range": Array [
        2236,
        2236,
      ],
      "text": "
",
    },
    "line": 199,
    "message": "Closing curly brace appears on the same line as the subsequent block.",
    "messageId": "sameLineClose",
    "nodeType": "Punctuator",
    "ruleId": "brace-style",
    "severity": 2,
  },
  Object {
    "column": 45,
    "fix": Object {
      "range": Array [
        2236,
        2236,
      ],
      "text": " ",
    },
    "line": 199,
    "message": "Expected space(s) before \\"else\\".",
    "messageId": "expectedBefore",
    "nodeType": null,
    "ruleId": "keyword-spacing",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 209,
    "fix": Object {
      "range": Array [
        2314,
        2314,
      ],
      "text": "
",
    },
    "line": 207,
    "message": "Expected blank line between class members.",
    "messageId": "always",
    "nodeType": "MethodDefinition",
    "ruleId": "lines-between-class-members",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 210,
    "fix": Object {
      "range": Array [
        2340,
        2340,
      ],
      "text": "
",
    },
    "line": 210,
    "message": "Expected blank line between class members.",
    "messageId": "always",
    "nodeType": "MethodDefinition",
    "ruleId": "lines-between-class-members",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 15,
    "endLine": 211,
    "fix": Object {
      "range": Array [
        2351,
        2351,
      ],
      "text": "
",
    },
    "line": 211,
    "message": "Expected blank line between class members.",
    "messageId": "always",
    "nodeType": "MethodDefinition",
    "ruleId": "lines-between-class-members",
    "severity": 2,
  },
  Object {
    "column": 1,
    "line": 217,
    "message": "This line has a length of 448. Maximum allowed is 100.",
    "messageId": "max",
    "nodeType": "Program",
    "ruleId": "max-len",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 19,
    "endLine": 222,
    "line": 222,
    "message": "Function 'maxParams' has too many parameters (4). Maximum allowed is 3.",
    "messageId": "exceed",
    "nodeType": "FunctionDeclaration",
    "ruleId": "max-params",
    "severity": 2,
  },
  Object {
    "column": 18,
    "line": 228,
    "message": "A constructor name should not start with a lowercase letter.",
    "messageId": "lower",
    "nodeType": "NewExpression",
    "ruleId": "new-cap",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 27,
    "endLine": 232,
    "fix": Object {
      "range": Array [
        2987,
        2987,
      ],
      "text": "()",
    },
    "line": 232,
    "message": "Missing '()' invoking a constructor.",
    "messageId": "missing",
    "nodeType": "NewExpression",
    "ruleId": "new-parens",
    "severity": 2,
  },
  Object {
    "column": 28,
    "endColumn": 35,
    "endLine": 233,
    "fix": Object {
      "range": Array [
        3023,
        3023,
      ],
      "text": "()",
    },
    "line": 233,
    "message": "Missing '()' invoking a constructor.",
    "messageId": "missing",
    "nodeType": "NewExpression",
    "ruleId": "new-parens",
    "severity": 2,
  },
  Object {
    "column": 24,
    "fix": Object {
      "range": Array [
        3077,
        3077,
      ],
      "text": "
",
    },
    "line": 237,
    "message": "Expected line break before \`.final\`.",
    "messageId": "expected",
    "nodeType": "Identifier",
    "ruleId": "newline-per-chained-call",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 26,
    "endLine": 241,
    "line": 241,
    "message": "The array literal notation [] is preferable.",
    "messageId": "preferLiteral",
    "nodeType": "NewExpression",
    "ruleId": "no-array-constructor",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 20,
    "endLine": 245,
    "line": 245,
    "message": "Unexpected use of '|'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 16,
    "endLine": 246,
    "line": 246,
    "message": "Unexpected use of '&'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 16,
    "endLine": 247,
    "line": 247,
    "message": "Unexpected use of '^'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 14,
    "endLine": 249,
    "line": 249,
    "message": "Unexpected use of '~'.",
    "messageId": "unexpected",
    "nodeType": "UnaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 14,
    "endLine": 249,
    "fix": Object {
      "range": Array [
        3223,
        3224,
      ],
      "text": "",
    },
    "line": 249,
    "message": "Unexpected space after unary operator '~'.",
    "messageId": "unexpectedAfter",
    "nodeType": "UnaryExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 17,
    "endLine": 251,
    "line": 251,
    "message": "Unexpected use of '<<'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 17,
    "endLine": 252,
    "line": 252,
    "message": "Unexpected use of '>>'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 18,
    "endLine": 253,
    "line": 253,
    "message": "Unexpected use of '>>>'.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 254,
    "line": 254,
    "message": "Unexpected use of '|='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 255,
    "line": 255,
    "message": "Unexpected use of '&='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 256,
    "line": 256,
    "message": "Unexpected use of '^='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 257,
    "line": 257,
    "message": "Unexpected use of '<<='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 258,
    "line": 258,
    "message": "Unexpected use of '>>='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 15,
    "endLine": 259,
    "line": 259,
    "message": "Unexpected use of '>>>='.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-bitwise",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 28,
    "endLine": 263,
    "line": 263,
    "message": "Unary operator '++' used.",
    "nodeType": "UpdateExpression",
    "ruleId": "no-plusplus",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 14,
    "endLine": 265,
    "line": 265,
    "message": "Unexpected use of continue statement.",
    "messageId": "unexpected",
    "nodeType": "ContinueStatement",
    "ruleId": "no-continue",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 279,
    "fix": Object {
      "range": Array [
        3517,
        3561,
      ],
      "text": "if (anotherCondition) {
    // ...
  }",
    },
    "line": 277,
    "message": "Unexpected if as the only statement in an else block.",
    "nodeType": "IfStatement",
    "ruleId": "no-lonely-if",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 291,
    "fix": Object {
      "range": Array [
        3596,
        3664,
      ],
      "text": "if (anotherCondition) {
    // ...
  }
  else {
    // ...
  }",
    },
    "line": 286,
    "message": "Unexpected if as the only statement in an else block.",
    "nodeType": "IfStatement",
    "ruleId": "no-lonely-if",
    "severity": 2,
  },
  Object {
    "column": 24,
    "line": 296,
    "message": "Unexpected mix of '&&' and '||'.",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 33,
    "line": 296,
    "message": "Unexpected mix of '&&' and '||'.",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 297,
    "message": "Unexpected mix of '+' and '*'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "line": 297,
    "message": "Unexpected mix of '+' and '*'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 299,
    "message": "Unexpected mix of '%' and '**'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "line": 299,
    "message": "Unexpected mix of '%' and '**'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 300,
    "message": "Unexpected mix of '%' and '+'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "line": 300,
    "message": "Unexpected mix of '%' and '+'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 301,
    "message": "Unexpected mix of '%' and '-'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "line": 301,
    "message": "Unexpected mix of '%' and '-'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 304,
    "message": "Unexpected mix of '**' and '+'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 304,
    "message": "Unexpected mix of '**' and '+'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 305,
    "message": "Unexpected mix of '**' and '-'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 305,
    "message": "Unexpected mix of '**' and '-'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 306,
    "message": "Unexpected mix of '**' and '*'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 306,
    "message": "Unexpected mix of '**' and '*'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 307,
    "message": "Unexpected mix of '**' and '/'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 307,
    "message": "Unexpected mix of '**' and '/'.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 20,
    "line": 308,
    "message": "Unexpected mix of '&&' and '||'.",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 308,
    "message": "Unexpected mix of '&&' and '||'.",
    "nodeType": "LogicalExpression",
    "ruleId": "no-mixed-operators",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 57,
    "endLine": 312,
    "line": 312,
    "message": "Unexpected chained assignment.",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-multi-assign",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 317,
    "fix": Object {
      "range": Array [
        4141,
        4143,
      ],
      "text": "",
    },
    "line": 313,
    "message": "More than 2 blank lines not allowed.",
    "nodeType": "Program",
    "ruleId": "no-multiple-empty-lines",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 60,
    "endLine": 321,
    "line": 321,
    "message": "Do not nest ternary expressions.",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-nested-ternary",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 26,
    "endLine": 325,
    "line": 325,
    "message": "The object literal notation {} is preferrable.",
    "nodeType": "NewExpression",
    "ruleId": "no-new-object",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 330,
    "line": 330,
    "message": "Unary operator '++' used.",
    "nodeType": "UpdateExpression",
    "ruleId": "no-plusplus",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 331,
    "line": 331,
    "message": "Unary operator '--' used.",
    "nodeType": "UpdateExpression",
    "ruleId": "no-plusplus",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 337,
    "line": 335,
    "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
    "nodeType": "ForInStatement",
    "ruleId": "no-restricted-syntax",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 341,
    "line": 339,
    "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
    "nodeType": "ForOfStatement",
    "ruleId": "no-restricted-syntax",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 16,
    "endLine": 343,
    "line": 343,
    "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
    "nodeType": "LabeledStatement",
    "ruleId": "no-restricted-syntax",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 31,
    "endLine": 347,
    "line": 347,
    "message": "Unexpected dangling '_' in '_underscoreDangle'.",
    "nodeType": "VariableDeclarator",
    "ruleId": "no-underscore-dangle",
    "severity": 2,
  },
  Object {
    "column": 33,
    "fix": Object {
      "range": Array [
        4592,
        4614,
      ],
      "text": "x === 2",
    },
    "line": 351,
    "message": "Unnecessary use of boolean literals in conditional expression.",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-unneeded-ternary",
    "severity": 2,
  },
  Object {
    "column": 23,
    "fix": Object {
      "range": Array [
        4634,
        4650,
      ],
      "text": "!!x",
    },
    "line": 352,
    "message": "Unnecessary use of boolean literals in conditional expression.",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-unneeded-ternary",
    "severity": 2,
  },
  Object {
    "column": 25,
    "fix": Object {
      "range": Array [
        4672,
        4681,
      ],
      "text": "x || 1",
    },
    "line": 353,
    "message": "Unnecessary use of conditional expression for default assignment.",
    "nodeType": "ConditionalExpression",
    "ruleId": "no-unneeded-ternary",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 10,
    "endLine": 357,
    "fix": Object {
      "range": Array [
        4722,
        4723,
      ],
      "text": "",
    },
    "line": 357,
    "message": "Unexpected whitespace before property bar.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 358,
    "fix": Object {
      "range": Array [
        4733,
        4735,
      ],
      "text": ".",
    },
    "line": 358,
    "message": "Unexpected whitespace before property bar.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 359,
    "fix": Object {
      "range": Array [
        4743,
        4745,
      ],
      "text": ".",
    },
    "line": 359,
    "message": "Unexpected whitespace before property bar.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 360,
    "fix": Object {
      "range": Array [
        4753,
        4755,
      ],
      "text": ".",
    },
    "line": 360,
    "message": "Unexpected whitespace before property bar.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 360,
    "fix": Object {
      "range": Array [
        4758,
        4760,
      ],
      "text": ".",
    },
    "line": 360,
    "message": "Unexpected whitespace before property baz.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 361,
    "fix": Object {
      "range": Array [
        4768,
        4770,
      ],
      "text": ".",
    },
    "line": 361,
    "message": "Unexpected whitespace before property bar.",
    "nodeType": "MemberExpression",
    "ruleId": "no-whitespace-before-property",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 369,
    "fix": Object {
      "range": Array [
        4852,
        4855,
      ],
      "text": " ",
    },
    "line": 369,
    "message": "Expected no linebreak before this statement.",
    "nodeType": "ExpressionStatement",
    "ruleId": "nonblock-statement-body-position",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 371,
    "fix": Object {
      "range": Array [
        4866,
        4869,
      ],
      "text": " ",
    },
    "line": 371,
    "message": "Expected no linebreak before this statement.",
    "nodeType": "ExpressionStatement",
    "ruleId": "nonblock-statement-body-position",
    "severity": 2,
  },
  Object {
    "column": 20,
    "fix": Object {
      "range": Array [
        4922,
        4922,
      ],
      "text": "
",
    },
    "line": 375,
    "message": "Expected a line break after this opening brace.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 56,
    "fix": Object {
      "range": Array [
        4957,
        4957,
      ],
      "text": "
",
    },
    "line": 375,
    "message": "Expected a line break before this closing brace.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        4999,
        4999,
      ],
      "text": "
",
    },
    "line": 378,
    "message": "Expected a line break after this opening brace.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        4999,
        4999,
      ],
      "text": " ",
    },
    "line": 378,
    "message": "A space is required after '{'.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 48,
    "fix": Object {
      "range": Array [
        5032,
        5032,
      ],
      "text": "
",
    },
    "line": 378,
    "message": "Expected a line break before this closing brace.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-newline",
    "severity": 2,
  },
  Object {
    "column": 48,
    "fix": Object {
      "range": Array [
        5032,
        5032,
      ],
      "text": " ",
    },
    "line": 378,
    "message": "A space is required before '}'.",
    "nodeType": "ObjectExpression",
    "ruleId": "object-curly-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 15,
    "endLine": 383,
    "fix": Object {
      "range": Array [
        5065,
        5069,
      ],
      "text": ";
  const ",
    },
    "line": 382,
    "message": "Split 'const' declarations into multiple statements.",
    "nodeType": "VariableDeclaration",
    "ruleId": "one-var",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 33,
    "endLine": 386,
    "fix": Object {
      "range": Array [
        5132,
        5133,
      ],
      "text": "; let",
    },
    "line": 386,
    "message": "Split 'let' declarations into multiple statements.",
    "nodeType": "VariableDeclaration",
    "ruleId": "one-var",
    "severity": 2,
  },
  Object {
    "column": 20,
    "fix": Object {
      "range": Array [
        5134,
        5134,
      ],
      "text": "
",
    },
    "line": 386,
    "message": "Expected variable declaration to be on a new line.",
    "nodeType": "VariableDeclaration",
    "ruleId": "one-var-declaration-per-line",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 18,
    "endLine": 391,
    "fix": Object {
      "range": Array [
        5188,
        5205,
      ],
      "text": "value += y",
    },
    "line": 391,
    "message": "Assignment can be replaced with operator assignment.",
    "messageId": "replaced",
    "nodeType": "AssignmentExpression",
    "ruleId": "operator-assignment",
    "severity": 2,
  },
  Object {
    "column": 12,
    "fix": Object {
      "range": Array [
        5240,
        5245,
      ],
      "text": "
  + ",
    },
    "line": 395,
    "message": "'+' should be placed at the beginning of the line.",
    "nodeType": "BinaryExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 15,
    "fix": Object {
      "range": Array [
        5265,
        5271,
      ],
      "text": "
  || ",
    },
    "line": 399,
    "message": "'||' should be placed at the beginning of the line.",
    "nodeType": "LogicalExpression",
    "ruleId": "operator-linebreak",
    "severity": 2,
  },
  Object {
    "column": 11,
    "fix": Object {
      "range": Array [
        5333,
        5335,
      ],
      "text": "
",
    },
    "line": 407,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "BlockStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        5347,
        5349,
      ],
      "text": "
",
    },
    "line": 411,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "BlockStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 19,
    "fix": Object {
      "range": Array [
        5371,
        5373,
      ],
      "text": "
",
    },
    "line": 413,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "ClassBody",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        5384,
        5386,
      ],
      "text": "
",
    },
    "line": 417,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "ClassBody",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 16,
    "fix": Object {
      "range": Array [
        5406,
        5408,
      ],
      "text": "
",
    },
    "line": 420,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "SwitchStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        5438,
        5440,
      ],
      "text": "
",
    },
    "line": 425,
    "message": "Block must not be padded by blank lines.",
    "nodeType": "SwitchStatement",
    "ruleId": "padded-blocks",
    "severity": 2,
  },
  Object {
    "column": 19,
    "endColumn": 44,
    "endLine": 429,
    "fix": Object {
      "range": Array [
        5486,
        5511,
      ],
      "text": "{ ...object}",
    },
    "line": 429,
    "message": "Use an object spread instead of \`Object.assign\` eg: \`{ ...foo }\`.",
    "messageId": "useSpreadMessage",
    "nodeType": "CallExpression",
    "ruleId": "prefer-object-spread",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 434,
    "fix": Object {
      "range": Array [
        5551,
        5554,
      ],
      "text": "\\"one\\"",
    },
    "line": 434,
    "message": "Inconsistently quoted property 'one' found.",
    "nodeType": "Property",
    "ruleId": "quote-props",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 9,
    "endLine": 435,
    "fix": Object {
      "range": Array [
        5561,
        5564,
      ],
      "text": "\\"two\\"",
    },
    "line": 435,
    "message": "Inconsistently quoted property 'two' found.",
    "nodeType": "Property",
    "ruleId": "quote-props",
    "severity": 2,
  },
  Object {
    "column": 22,
    "endColumn": 30,
    "endLine": 441,
    "fix": Object {
      "range": Array [
        5624,
        5632,
      ],
      "text": "'string'",
    },
    "line": 441,
    "message": "Strings must use singlequote.",
    "nodeType": "Literal",
    "ruleId": "quotes",
    "severity": 2,
  },
  Object {
    "column": 21,
    "fix": Object {
      "range": Array [
        5664,
        5664,
      ],
      "text": ";",
    },
    "line": 445,
    "message": "Missing semicolon.",
    "nodeType": "VariableDeclaration",
    "ruleId": "semi",
    "severity": 2,
  },
  Object {
    "column": 19,
    "fix": Object {
      "range": Array [
        5682,
        5683,
      ],
      "text": "",
    },
    "line": 446,
    "message": "Unexpected whitespace before semicolon.",
    "nodeType": "ExpressionStatement",
    "ruleId": "semi-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 448,
    "line": 448,
    "message": "Expected this semicolon to be at the end of the previous line.",
    "nodeType": null,
    "ruleId": "semi-style",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 17,
    "endLine": 452,
    "fix": Object {
      "range": Array [
        5757,
        5757,
      ],
      "text": " ",
    },
    "line": 452,
    "message": "Missing space before opening brace.",
    "nodeType": "BlockStatement",
    "ruleId": "space-before-blocks",
    "severity": 2,
  },
  Object {
    "column": 25,
    "fix": Object {
      "range": Array [
        5817,
        5818,
      ],
      "text": "",
    },
    "line": 456,
    "message": "Unexpected space before function parentheses.",
    "nodeType": "FunctionDeclaration",
    "ruleId": "space-before-function-paren",
    "severity": 2,
  },
  Object {
    "column": 35,
    "fix": Object {
      "range": Array [
        5858,
        5859,
      ],
      "text": "",
    },
    "line": 457,
    "message": "Unexpected space before function parentheses.",
    "nodeType": "FunctionExpression",
    "ruleId": "space-before-function-paren",
    "severity": 2,
  },
  Object {
    "column": 33,
    "fix": Object {
      "range": Array [
        5898,
        5898,
      ],
      "text": " ",
    },
    "line": 458,
    "message": "Missing space before function parentheses.",
    "nodeType": "ArrowFunctionExpression",
    "ruleId": "space-before-function-paren",
    "severity": 2,
  },
  Object {
    "column": 4,
    "fix": Object {
      "range": Array [
        5932,
        5933,
      ],
      "text": "",
    },
    "line": 462,
    "message": "There should be no spaces inside this paren.",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        5940,
        5941,
      ],
      "text": "",
    },
    "line": 462,
    "message": "There should be no spaces inside this paren.",
    "nodeType": "Program",
    "ruleId": "space-in-parens",
    "severity": 2,
  },
  Object {
    "column": 2,
    "fix": Object {
      "range": Array [
        5966,
        5967,
      ],
      "text": " + ",
    },
    "line": 466,
    "message": "Operator '+' must be spaced.",
    "nodeType": "BinaryExpression",
    "ruleId": "space-infix-ops",
    "severity": 2,
  },
  Object {
    "column": 2,
    "fix": Object {
      "range": Array [
        5971,
        5972,
      ],
      "text": " ? ",
    },
    "line": 467,
    "message": "Operator '?' must be spaced.",
    "nodeType": "ConditionalExpression",
    "ruleId": "space-infix-ops",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 16,
    "endLine": 471,
    "fix": Object {
      "range": Array [
        6004,
        6004,
      ],
      "text": " ",
    },
    "line": 471,
    "message": "Unary word operator 'delete' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "UnaryExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 23,
    "endLine": 472,
    "fix": Object {
      "range": Array [
        6030,
        6030,
      ],
      "text": " ",
    },
    "line": 472,
    "message": "Unary word operator 'new' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "NewExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 475,
    "fix": Object {
      "range": Array [
        6068,
        6068,
      ],
      "text": " ",
    },
    "line": 475,
    "message": "Unary word operator 'yield' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "YieldExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 13,
    "endLine": 479,
    "fix": Object {
      "range": Array [
        6111,
        6111,
      ],
      "text": " ",
    },
    "line": 479,
    "message": "Unary word operator 'await' must be followed by whitespace.",
    "messageId": "wordOperator",
    "nodeType": "AwaitExpression",
    "ruleId": "space-unary-ops",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 17,
    "endLine": 484,
    "fix": Object {
      "range": Array [
        6142,
        6142,
      ],
      "text": " ",
    },
    "line": 484,
    "message": "Expected space or tab after '//' in comment.",
    "nodeType": "Line",
    "ruleId": "spaced-comment",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 19,
    "endLine": 485,
    "fix": Object {
      "range": Array [
        6159,
        6159,
      ],
      "text": " ",
    },
    "line": 485,
    "message": "Expected space or tab after '/*' in comment.",
    "nodeType": "Block",
    "ruleId": "spaced-comment",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 490,
    "fix": Object {
      "range": Array [
        6237,
        6238,
      ],
      "text": "",
    },
    "line": 490,
    "message": "Unexpected space(s) before this colon.",
    "messageId": "unexpectedBefore",
    "nodeType": "SwitchCase",
    "ruleId": "switch-colon-spacing",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        6282,
        6283,
      ],
      "text": "",
    },
    "line": 495,
    "message": "Unexpected space between template tag and template literal.",
    "messageId": "unexpected",
    "nodeType": "TaggedTemplateExpression",
    "ruleId": "template-tag-spacing",
    "severity": 2,
  },
]
`;

exports[`ESLint style should pass 1`] = `Array []`;
