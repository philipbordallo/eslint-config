// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESLint errors should fail 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 4,
    "line": 2,
    "message": "The update clause in this loop moves the variable in the wrong direction.",
    "messageId": "incorrectDirection",
    "nodeType": "ForStatement",
    "ruleId": "for-direction",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 8,
    "line": 6,
    "message": "The update clause in this loop moves the variable in the wrong direction.",
    "messageId": "incorrectDirection",
    "nodeType": "ForStatement",
    "ruleId": "for-direction",
    "severity": 2,
  },
  Object {
    "column": 11,
    "line": 13,
    "message": "Expected to return a value in getter 'name'.",
    "messageId": "expected",
    "nodeType": "FunctionExpression",
    "ruleId": "getter-return",
    "severity": 2,
  },
  Object {
    "column": 27,
    "endColumn": 32,
    "endLine": 18,
    "line": 18,
    "message": "Promise executor functions should not be async.",
    "messageId": "async",
    "nodeType": "Identifier",
    "ruleId": "no-async-promise-executor",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 34,
    "endLine": 28,
    "line": 28,
    "message": "Unexpected \`await\` inside a loop.",
    "messageId": "unexpectedAwait",
    "nodeType": "AwaitExpression",
    "ruleId": "no-await-in-loop",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 17,
    "endLine": 35,
    "line": 35,
    "message": "Do not use the '===' operator to compare against -0.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-compare-neg-zero",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 43,
    "line": 41,
    "message": "Unexpected assignment within an 'if' statement.",
    "messageId": "unexpected",
    "nodeType": "IfStatement",
    "ruleId": "no-cond-assign",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 14,
    "endLine": 41,
    "line": 41,
    "message": "Unexpected constant condition.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-constant-condition",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 12,
    "endLine": 47,
    "line": 47,
    "message": "Unexpected console statement.",
    "messageId": "unexpected",
    "nodeType": "MemberExpression",
    "ruleId": "no-console",
    "severity": 1,
  },
  Object {
    "column": 5,
    "endColumn": 9,
    "endLine": 51,
    "line": 51,
    "message": "Unexpected constant condition.",
    "messageId": "unexpected",
    "nodeType": "Literal",
    "ruleId": "no-constant-condition",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 10,
    "endLine": 57,
    "line": 57,
    "message": "Unexpected 'debugger' statement.",
    "messageId": "unexpected",
    "nodeType": "DebuggerStatement",
    "ruleId": "no-debugger",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 4,
    "endLine": 63,
    "line": 63,
    "message": "Duplicate key 'a'.",
    "messageId": "unexpected",
    "nodeType": "ObjectExpression",
    "ruleId": "no-dupe-keys",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 76,
    "line": 75,
    "message": "Duplicate case label.",
    "messageId": "unexpected",
    "nodeType": "SwitchCase",
    "ruleId": "no-duplicate-case",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 14,
    "endLine": 84,
    "line": 84,
    "message": "Empty block statement.",
    "messageId": "unexpected",
    "nodeType": "BlockStatement",
    "ruleId": "no-empty",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 2,
    "endLine": 87,
    "line": 85,
    "message": "Empty block statement.",
    "messageId": "unexpected",
    "nodeType": "BlockStatement",
    "ruleId": "no-empty",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 16,
    "endLine": 88,
    "line": 88,
    "message": "Empty block statement.",
    "messageId": "unexpected",
    "nodeType": "BlockStatement",
    "ruleId": "no-empty",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 8,
    "endLine": 96,
    "line": 96,
    "message": "Do not assign to the exception parameter.",
    "messageId": "unexpected",
    "nodeType": "Identifier",
    "ruleId": "no-ex-assign",
    "severity": 2,
  },
  Object {
    "column": 22,
    "endColumn": 28,
    "endLine": 101,
    "fix": Object {
      "range": Array [
        997,
        1004,
      ],
      "text": "value",
    },
    "line": 101,
    "message": "Redundant double negation.",
    "messageId": "unexpectedNegation",
    "nodeType": "UnaryExpression",
    "ruleId": "no-extra-boolean-cast",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 31,
    "endLine": 102,
    "fix": Object {
      "range": Array [
        1029,
        1036,
      ],
      "text": "value",
    },
    "line": 102,
    "message": "Redundant double negation.",
    "messageId": "unexpectedNegation",
    "nodeType": "UnaryExpression",
    "ruleId": "no-extra-boolean-cast",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 19,
    "endLine": 103,
    "fix": Object {
      "range": Array [
        1043,
        1057,
      ],
      "text": "value",
    },
    "line": 103,
    "message": "Redundant Boolean call.",
    "messageId": "unexpectedCall",
    "nodeType": "CallExpression",
    "ruleId": "no-extra-boolean-cast",
    "severity": 2,
  },
  Object {
    "column": 19,
    "fix": Object {
      "range": Array [
        1111,
        1119,
      ],
      "text": "a || b",
    },
    "line": 109,
    "message": "Unnecessary parentheses around expression.",
    "messageId": "unexpected",
    "nodeType": "LogicalExpression",
    "ruleId": "no-extra-parens",
    "severity": 2,
  },
  Object {
    "column": 24,
    "fix": Object {
      "range": Array [
        1144,
        1155,
      ],
      "text": "value / 5",
    },
    "line": 110,
    "message": "Unnecessary parentheses around expression.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-extra-parens",
    "severity": 2,
  },
  Object {
    "column": 22,
    "endColumn": 23,
    "endLine": 114,
    "fix": Object {
      "range": Array [
        1196,
        1227,
      ],
      "text": ";


// no-func-assign
function",
    },
    "line": 114,
    "message": "Unnecessary semicolon.",
    "messageId": "unexpected",
    "nodeType": "EmptyStatement",
    "ruleId": "no-extra-semi",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 15,
    "endLine": 120,
    "line": 120,
    "message": "'assignedAction' is a function.",
    "nodeType": "Identifier",
    "ruleId": "no-func-assign",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 24,
    "endLine": 126,
    "line": 126,
    "message": "Move function declaration to function body root.",
    "nodeType": "FunctionDeclaration",
    "ruleId": "no-inner-declarations",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 17,
    "endLine": 132,
    "line": 132,
    "message": "Invalid flags supplied to RegExp constructor 'z'.",
    "nodeType": "CallExpression",
    "ruleId": "no-invalid-regexp",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 18,
    "endLine": 136,
    "line": 136,
    "message": "'Math' is not a function.",
    "nodeType": "CallExpression",
    "ruleId": "no-obj-calls",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 18,
    "endLine": 137,
    "line": 137,
    "message": "'JSON' is not a function.",
    "nodeType": "CallExpression",
    "ruleId": "no-obj-calls",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 24,
    "endLine": 138,
    "line": 138,
    "message": "'Reflect' is not a function.",
    "nodeType": "CallExpression",
    "ruleId": "no-obj-calls",
    "severity": 2,
  },
  Object {
    "column": 27,
    "line": 143,
    "message": "Do not access Object.prototype method 'hasOwnProperty' from target object.",
    "nodeType": "CallExpression",
    "ruleId": "no-prototype-builtins",
    "severity": 2,
  },
  Object {
    "column": 29,
    "line": 144,
    "message": "Do not access Object.prototype method 'isPrototypeOf' from target object.",
    "nodeType": "CallExpression",
    "ruleId": "no-prototype-builtins",
    "severity": 2,
  },
  Object {
    "column": 28,
    "line": 145,
    "message": "Do not access Object.prototype method 'propertyIsEnumerable' from target object.",
    "nodeType": "CallExpression",
    "ruleId": "no-prototype-builtins",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 24,
    "endLine": 149,
    "fix": Object {
      "range": Array [
        1715,
        1718,
      ],
      "text": " {3}",
    },
    "line": 149,
    "message": "Spaces are hard to count. Use {3}.",
    "nodeType": "Literal",
    "ruleId": "no-regex-spaces",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 32,
    "endLine": 150,
    "fix": Object {
      "range": Array [
        1747,
        1750,
      ],
      "text": " {3}",
    },
    "line": 150,
    "message": "Spaces are hard to count. Use {3}.",
    "nodeType": "NewExpression",
    "ruleId": "no-regex-spaces",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 25,
    "endLine": 154,
    "line": 154,
    "message": "Unexpected comma in middle of array.",
    "nodeType": "ArrayExpression",
    "ruleId": "no-sparse-arrays",
    "severity": 2,
  },
  Object {
    "column": 29,
    "endColumn": 39,
    "endLine": 158,
    "line": 158,
    "message": "Unexpected template string expression.",
    "nodeType": "Literal",
    "ruleId": "no-template-curly-in-string",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 23,
    "endLine": 165,
    "line": 165,
    "message": "Unreachable code.",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unreachable",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 14,
    "endLine": 165,
    "line": 165,
    "message": "Unexpected console statement.",
    "messageId": "unexpected",
    "nodeType": "MemberExpression",
    "ruleId": "no-console",
    "severity": 1,
  },
  Object {
    "column": 17,
    "endColumn": 4,
    "endLine": 176,
    "line": 174,
    "message": "Unreachable code.",
    "nodeType": "BlockStatement",
    "ruleId": "no-unreachable",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 14,
    "endLine": 178,
    "line": 178,
    "message": "Unsafe usage of ReturnStatement.",
    "nodeType": "ReturnStatement",
    "ruleId": "no-unsafe-finally",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 9,
    "endLine": 184,
    "fix": Object {
      "range": Array [
        2130,
        2143,
      ],
      "text": "(key in object)",
    },
    "line": 184,
    "message": "Unexpected negating the left operand of 'in' operator.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "no-unsafe-negation",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 18,
    "endLine": 190,
    "line": 190,
    "message": "Use the isNaN function to compare with NaN.",
    "messageId": "useIsNaN",
    "nodeType": "BinaryExpression",
    "ruleId": "use-isnan",
    "severity": 2,
  },
]
`;

exports[`ESLint errors should pass 1`] = `Array []`;
