// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESLint best practices should fail 1`] = `
Array [
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 425,
    "line": 2,
    "message": "File has too many classes (3). Maximum allowed is 1.",
    "messageId": "maximumExceeded",
    "nodeType": "Program",
    "ruleId": "max-classes-per-file",
    "severity": 2,
  },
  Object {
    "column": 8,
    "endColumn": 4,
    "endLine": 8,
    "fix": Object {
      "range": Array [
        56,
        148,
      ],
      "text": "number => {
  if (number < 2) {
    return number;
  }
  
    return number + 1;
  
}",
    },
    "line": 6,
    "message": "Unnecessary 'else' after 'return'.",
    "messageId": "unexpected",
    "nodeType": "BlockStatement",
    "ruleId": "no-else-return",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 22,
    "endLine": 14,
    "line": 14,
    "message": "All 'var' declarations must be at the top of the function scope.",
    "messageId": "top",
    "nodeType": "VariableDeclaration",
    "ruleId": "vars-on-top",
    "severity": 2,
  },
  Object {
    "column": 15,
    "endColumn": 20,
    "endLine": 17,
    "line": 17,
    "message": "'build' used outside of binding context.",
    "messageId": "outOfScope",
    "nodeType": "Identifier",
    "ruleId": "block-scoped-var",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 4,
    "endLine": 24,
    "line": 22,
    "message": "Expected 'this' to be used by class method 'honk'.",
    "messageId": "missingThis",
    "nodeType": "FunctionExpression",
    "ruleId": "class-methods-use-this",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 4,
    "endLine": 33,
    "fix": Object {
      "range": Array [
        369,
        467,
      ],
      "text": "function doSomething(condition) {
  if (condition) {
    return true;
  } 
    return;
  
}",
    },
    "line": 31,
    "message": "Unnecessary 'else' after 'return'.",
    "messageId": "unexpected",
    "nodeType": "BlockStatement",
    "ruleId": "no-else-return",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 12,
    "endLine": 32,
    "line": 32,
    "message": "Function 'doSomething' expected a return value.",
    "messageId": "missingReturnValue",
    "nodeType": "ReturnStatement",
    "ruleId": "consistent-return",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 12,
    "endLine": 32,
    "fix": Object {
      "range": Array [
        369,
        467,
      ],
      "text": "function doSomething(condition) {
  if (condition) {
    return true;
  } else {
    
  }
}",
    },
    "line": 32,
    "message": "Unnecessary return statement.",
    "nodeType": "ReturnStatement",
    "ruleId": "no-useless-return",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        489,
        503,
      ],
      "text": "{doSomething();}",
    },
    "line": 37,
    "message": "Expected { after 'if' condition.",
    "messageId": "missingCurlyAfterCondition",
    "nodeType": "IfStatement",
    "ruleId": "curly",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        511,
        529,
      ],
      "text": "{doSomethingElse();}",
    },
    "line": 39,
    "message": "Expected { after 'else'.",
    "messageId": "missingCurlyAfter",
    "nodeType": "IfStatement",
    "ruleId": "curly",
    "severity": 2,
  },
  Object {
    "column": 1,
    "fix": Object {
      "range": Array [
        540,
        559,
      ],
      "text": "{foo(
  bar,
  baz);}",
    },
    "line": 42,
    "message": "Expected { after 'if' condition.",
    "messageId": "missingCurlyAfterCondition",
    "nodeType": "IfStatement",
    "ruleId": "curly",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 51,
    "line": 47,
    "message": "Expected a default case.",
    "messageId": "missingDefaultCase",
    "nodeType": "SwitchStatement",
    "ruleId": "default-case",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 20,
    "endLine": 54,
    "fix": Object {
      "range": Array [
        656,
        665,
      ],
      "text": ".class",
    },
    "line": 54,
    "message": "[\\"class\\"] is better written in dot notation.",
    "messageId": "useDot",
    "nodeType": "Literal",
    "ruleId": "dot-notation",
    "severity": 2,
  },
  Object {
    "column": 20,
    "fix": Object {
      "range": Array [
        703,
        705,
      ],
      "text": "
.",
    },
    "line": 57,
    "message": "Expected dot to be on same line as property.",
    "messageId": "expectedDotBeforeProperty",
    "nodeType": "MemberExpression",
    "ruleId": "dot-location",
    "severity": 2,
  },
  Object {
    "column": 5,
    "line": 62,
    "message": "Expected '===' and instead saw '=='.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "eqeqeq",
    "severity": 2,
  },
  Object {
    "column": 7,
    "line": 63,
    "message": "Expected '===' and instead saw '=='.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "eqeqeq",
    "severity": 2,
  },
  Object {
    "column": 11,
    "line": 64,
    "message": "Expected '!==' and instead saw '!='.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "eqeqeq",
    "severity": 2,
  },
  Object {
    "column": 9,
    "line": 65,
    "message": "Expected '===' and instead saw '=='.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "eqeqeq",
    "severity": 2,
  },
  Object {
    "column": 14,
    "fix": Object {
      "range": Array [
        815,
        817,
      ],
      "text": "===",
    },
    "line": 66,
    "message": "Expected '===' and instead saw '=='.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "eqeqeq",
    "severity": 2,
  },
  Object {
    "column": 11,
    "fix": Object {
      "range": Array [
        843,
        845,
      ],
      "text": "!==",
    },
    "line": 67,
    "message": "Expected '!==' and instead saw '!='.",
    "messageId": "unexpected",
    "nodeType": "BinaryExpression",
    "ruleId": "eqeqeq",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 76,
    "line": 74,
    "message": "The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype.",
    "messageId": "wrap",
    "nodeType": "ForInStatement",
    "ruleId": "guard-for-in",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 15,
    "endLine": 82,
    "line": 82,
    "message": "Unexpected alert.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "no-alert",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 25,
    "endLine": 84,
    "line": 84,
    "message": "Unexpected confirm.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "no-alert",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 40,
    "endLine": 86,
    "line": 86,
    "message": "Unexpected prompt.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "no-alert",
    "severity": 1,
  },
  Object {
    "column": 3,
    "endColumn": 19,
    "endLine": 94,
    "line": 94,
    "message": "'arguments.callee' is restricted from being used. arguments.callee is deprecated",
    "nodeType": "MemberExpression",
    "ruleId": "no-restricted-properties",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 19,
    "endLine": 94,
    "line": 94,
    "message": "Avoid arguments.callee.",
    "messageId": "unexpected",
    "nodeType": "MemberExpression",
    "ruleId": "no-caller",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 41,
    "endLine": 98,
    "line": 98,
    "message": "'arguments.callee' is restricted from being used. arguments.callee is deprecated",
    "nodeType": "MemberExpression",
    "ruleId": "no-restricted-properties",
    "severity": 2,
  },
  Object {
    "column": 25,
    "endColumn": 41,
    "endLine": 98,
    "line": 98,
    "message": "Avoid arguments.callee.",
    "messageId": "unexpected",
    "nodeType": "MemberExpression",
    "ruleId": "no-caller",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 15,
    "endLine": 104,
    "line": 104,
    "message": "Unexpected lexical declaration in case block.",
    "messageId": "unexpected",
    "nodeType": "VariableDeclaration",
    "ruleId": "no-case-declarations",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 17,
    "endLine": 107,
    "line": 107,
    "message": "Unexpected lexical declaration in case block.",
    "messageId": "unexpected",
    "nodeType": "VariableDeclaration",
    "ruleId": "no-case-declarations",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 20,
    "endLine": 110,
    "line": 110,
    "message": "Unexpected lexical declaration in case block.",
    "messageId": "unexpected",
    "nodeType": "FunctionDeclaration",
    "ruleId": "no-case-declarations",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 15,
    "endLine": 113,
    "line": 113,
    "message": "Unexpected lexical declaration in case block.",
    "messageId": "unexpected",
    "nodeType": "ClassDeclaration",
    "ruleId": "no-case-declarations",
    "severity": 2,
  },
  Object {
    "column": 10,
    "line": 117,
    "message": "Expected to return a value at the end of function 'fooReturn'.",
    "messageId": "missingReturn",
    "nodeType": "FunctionDeclaration",
    "ruleId": "consistent-return",
    "severity": 2,
  },
  Object {
    "column": 10,
    "endColumn": 4,
    "endLine": 122,
    "fix": Object {
      "range": Array [
        1502,
        1630,
      ],
      "text": "function fooReturn() {
  if (error) {
      return 'It failed';
  } if (loading) {
      return \`It's still loading\`;
  }
}",
    },
    "line": 120,
    "message": "Unnecessary 'else' after 'return'.",
    "messageId": "unexpected",
    "nodeType": "IfStatement",
    "ruleId": "no-else-return",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 132,
    "message": "Unexpected empty generator function 'fooEmptyGen'.",
    "messageId": "unexpected",
    "nodeType": "FunctionDeclaration",
    "ruleId": "no-empty-function",
    "severity": 2,
  },
  Object {
    "column": 36,
    "line": 134,
    "message": "Unexpected empty generator function.",
    "messageId": "unexpected",
    "nodeType": "FunctionExpression",
    "ruleId": "no-empty-function",
    "severity": 2,
  },
  Object {
    "column": 25,
    "line": 139,
    "message": "Unexpected empty generator method 'fooEmpty'.",
    "messageId": "unexpected",
    "nodeType": "FunctionExpression",
    "ruleId": "no-empty-function",
    "severity": 2,
  },
  Object {
    "column": 15,
    "line": 143,
    "message": "Unexpected empty generator method 'fooEmpty'.",
    "messageId": "unexpected",
    "nodeType": "FunctionExpression",
    "ruleId": "no-empty-function",
    "severity": 2,
  },
  Object {
    "column": 18,
    "line": 145,
    "message": "Unexpected empty getter 'fooEmpty'.",
    "messageId": "unexpected",
    "nodeType": "FunctionExpression",
    "ruleId": "no-empty-function",
    "severity": 2,
  },
  Object {
    "column": 23,
    "line": 147,
    "message": "Unexpected empty setter 'fooEmpty'.",
    "messageId": "unexpected",
    "nodeType": "FunctionExpression",
    "ruleId": "no-empty-function",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 7,
    "endLine": 151,
    "line": 151,
    "message": "Unexpected empty object pattern.",
    "messageId": "unexpected",
    "nodeType": "ObjectPattern",
    "ruleId": "no-empty-pattern",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 7,
    "endLine": 152,
    "line": 152,
    "message": "Unexpected empty array pattern.",
    "messageId": "unexpected",
    "nodeType": "ArrayPattern",
    "ruleId": "no-empty-pattern",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 11,
    "endLine": 153,
    "line": 153,
    "message": "Unexpected empty object pattern.",
    "messageId": "unexpected",
    "nodeType": "ObjectPattern",
    "ruleId": "no-empty-pattern",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 11,
    "endLine": 154,
    "line": 154,
    "message": "Unexpected empty array pattern.",
    "messageId": "unexpected",
    "nodeType": "ArrayPattern",
    "ruleId": "no-empty-pattern",
    "severity": 2,
  },
  Object {
    "column": 26,
    "endColumn": 28,
    "endLine": 155,
    "line": 155,
    "message": "Unexpected empty object pattern.",
    "messageId": "unexpected",
    "nodeType": "ObjectPattern",
    "ruleId": "no-empty-pattern",
    "severity": 2,
  },
  Object {
    "column": 29,
    "endColumn": 31,
    "endLine": 156,
    "line": 156,
    "message": "Unexpected empty array pattern.",
    "messageId": "unexpected",
    "nodeType": "ArrayPattern",
    "ruleId": "no-empty-pattern",
    "severity": 2,
  },
  Object {
    "column": 35,
    "endColumn": 37,
    "endLine": 157,
    "line": 157,
    "message": "Unexpected empty object pattern.",
    "messageId": "unexpected",
    "nodeType": "ObjectPattern",
    "ruleId": "no-empty-pattern",
    "severity": 2,
  },
  Object {
    "column": 34,
    "endColumn": 36,
    "endLine": 158,
    "line": 158,
    "message": "Unexpected empty array pattern.",
    "messageId": "unexpected",
    "nodeType": "ArrayPattern",
    "ruleId": "no-empty-pattern",
    "severity": 2,
  },
  Object {
    "column": 1,
    "line": 161,
    "message": "eval can be harmful.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "no-eval",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 25,
    "endLine": 164,
    "line": 164,
    "message": "Object prototype is read only, properties should not be added.",
    "messageId": "unexpected",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-extend-native",
    "severity": 2,
  },
  Object {
    "column": 3,
    "fix": Object {
      "range": Array [
        2348,
        2358,
      ],
      "text": "",
    },
    "line": 169,
    "message": "The function binding is unnecessary.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "no-extra-bind",
    "severity": 2,
  },
  Object {
    "column": 4,
    "fix": Object {
      "range": Array [
        2403,
        2413,
      ],
      "text": "",
    },
    "line": 173,
    "message": "The function binding is unnecessary.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "no-extra-bind",
    "severity": 2,
  },
  Object {
    "column": 4,
    "fix": Object {
      "range": Array [
        2465,
        2475,
      ],
      "text": "",
    },
    "line": 177,
    "message": "The function binding is unnecessary.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "no-extra-bind",
    "severity": 2,
  },
  Object {
    "column": 3,
    "fix": Object {
      "range": Array [
        2551,
        2561,
      ],
      "text": "",
    },
    "line": 181,
    "message": "The function binding is unnecessary.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "no-extra-bind",
    "severity": 2,
  },
  Object {
    "column": 3,
    "fix": Object {
      "range": Array [
        2645,
        2655,
      ],
      "text": "",
    },
    "line": 187,
    "message": "The function binding is unnecessary.",
    "messageId": "unexpected",
    "nodeType": "CallExpression",
    "ruleId": "no-extra-bind",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 194,
    "line": 192,
    "message": "Unexpected labeled statement.",
    "nodeType": "LabeledStatement",
    "ruleId": "no-labels",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 193,
    "line": 193,
    "message": "Unexpected label in break statement.",
    "nodeType": "BreakStatement",
    "ruleId": "no-labels",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 10,
    "endLine": 193,
    "fix": Object {
      "range": Array [
        2731,
        2733,
      ],
      "text": "",
    },
    "line": 193,
    "message": "This label 'A' is unnecessary.",
    "messageId": "unexpected",
    "nodeType": "Identifier",
    "ruleId": "no-extra-label",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 198,
    "line": 196,
    "message": "Unexpected labeled statement.",
    "nodeType": "LabeledStatement",
    "ruleId": "no-labels",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 11,
    "endLine": 197,
    "line": 197,
    "message": "Unexpected label in break statement.",
    "nodeType": "BreakStatement",
    "ruleId": "no-labels",
    "severity": 2,
  },
  Object {
    "column": 9,
    "endColumn": 10,
    "endLine": 197,
    "fix": Object {
      "range": Array [
        2779,
        2781,
      ],
      "text": "",
    },
    "line": 197,
    "message": "This label 'B' is unnecessary.",
    "messageId": "unexpected",
    "nodeType": "Identifier",
    "ruleId": "no-extra-label",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 205,
    "line": 200,
    "message": "Unexpected labeled statement.",
    "nodeType": "LabeledStatement",
    "ruleId": "no-labels",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 13,
    "endLine": 202,
    "line": 202,
    "message": "Unexpected label in break statement.",
    "nodeType": "BreakStatement",
    "ruleId": "no-labels",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 12,
    "endLine": 202,
    "fix": Object {
      "range": Array [
        2821,
        2823,
      ],
      "text": "",
    },
    "line": 202,
    "message": "This label 'C' is unnecessary.",
    "messageId": "unexpected",
    "nodeType": "Identifier",
    "ruleId": "no-extra-label",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 12,
    "endLine": 212,
    "line": 212,
    "message": "Expected a 'break' statement before 'case'.",
    "messageId": "case",
    "nodeType": "SwitchCase",
    "ruleId": "no-fallthrough",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 13,
    "endLine": 214,
    "line": 214,
    "message": "Expected a 'break' statement before 'default'.",
    "messageId": "default",
    "nodeType": "SwitchCase",
    "ruleId": "no-fallthrough",
    "severity": 2,
  },
  Object {
    "column": 17,
    "endColumn": 19,
    "endLine": 219,
    "fix": Object {
      "range": Array [
        2997,
        2997,
      ],
      "text": "0",
    },
    "line": 219,
    "message": "A leading decimal point can be confused with a dot.",
    "messageId": "leading",
    "nodeType": "Literal",
    "ruleId": "no-floating-decimal",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 18,
    "endLine": 220,
    "fix": Object {
      "range": Array [
        3018,
        3018,
      ],
      "text": "0",
    },
    "line": 220,
    "message": "A trailing decimal point can be confused with a dot.",
    "messageId": "trailing",
    "nodeType": "Literal",
    "ruleId": "no-floating-decimal",
    "severity": 2,
  },
  Object {
    "column": 27,
    "endColumn": 29,
    "endLine": 221,
    "fix": Object {
      "range": Array [
        3046,
        3046,
      ],
      "text": "0",
    },
    "line": 221,
    "message": "A leading decimal point can be confused with a dot.",
    "messageId": "leading",
    "nodeType": "Literal",
    "ruleId": "no-floating-decimal",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 224,
    "line": 224,
    "message": "Read-only global 'window' should not be modified.",
    "nodeType": "Identifier",
    "ruleId": "no-global-assign",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 7,
    "endLine": 225,
    "line": 225,
    "message": "Read-only global 'length' should not be modified.",
    "nodeType": "Identifier",
    "ruleId": "no-global-assign",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 4,
    "endLine": 226,
    "line": 226,
    "message": "Read-only global 'top' should not be modified.",
    "nodeType": "Identifier",
    "ruleId": "no-global-assign",
    "severity": 2,
  },
  Object {
    "column": 22,
    "endColumn": 27,
    "endLine": 229,
    "fix": Object {
      "range": Array [
        3151,
        3156,
      ],
      "text": "Boolean(foo)",
    },
    "line": 229,
    "message": "use \`Boolean(foo)\` instead.",
    "nodeType": "UnaryExpression",
    "ruleId": "no-implicit-coercion",
    "severity": 2,
  },
  Object {
    "column": 22,
    "endColumn": 39,
    "endLine": 230,
    "line": 230,
    "message": "use \`foo.indexOf(\\".\\") !== -1\` instead.",
    "nodeType": "UnaryExpression",
    "ruleId": "no-implicit-coercion",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 28,
    "endLine": 231,
    "fix": Object {
      "range": Array [
        3221,
        3225,
      ],
      "text": "Number(foo)",
    },
    "line": 231,
    "message": "use \`Number(foo)\` instead.",
    "nodeType": "UnaryExpression",
    "ruleId": "no-implicit-coercion",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 31,
    "endLine": 232,
    "fix": Object {
      "range": Array [
        3250,
        3257,
      ],
      "text": "Number(foo)",
    },
    "line": 232,
    "message": "use \`Number(foo)\` instead.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-implicit-coercion",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 32,
    "endLine": 234,
    "fix": Object {
      "range": Array [
        3283,
        3291,
      ],
      "text": "String(foo)",
    },
    "line": 234,
    "message": "use \`String(foo)\` instead.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-implicit-coercion",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 32,
    "endLine": 235,
    "fix": Object {
      "range": Array [
        3316,
        3324,
      ],
      "text": "String(foo)",
    },
    "line": 235,
    "message": "use \`String(foo)\` instead.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-implicit-coercion",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 10,
    "endLine": 236,
    "fix": Object {
      "range": Array [
        3326,
        3335,
      ],
      "text": "foo = String(foo)",
    },
    "line": 236,
    "message": "use \`foo = String(foo)\` instead.",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-implicit-coercion",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 10,
    "endLine": 237,
    "fix": Object {
      "range": Array [
        3337,
        3346,
      ],
      "text": "foo = String(foo)",
    },
    "line": 237,
    "message": "use \`foo = String(foo)\` instead.",
    "nodeType": "AssignmentExpression",
    "ruleId": "no-implicit-coercion",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 33,
    "endLine": 240,
    "line": 240,
    "message": "Implied eval. Consider passing a function instead of a string.",
    "nodeType": "CallExpression",
    "ruleId": "no-implied-eval",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 34,
    "endLine": 241,
    "line": 241,
    "message": "Implied eval. Consider passing a function instead of a string.",
    "nodeType": "CallExpression",
    "ruleId": "no-implied-eval",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 27,
    "endLine": 242,
    "line": 242,
    "message": "Implied eval. Consider passing a function instead of a string.",
    "nodeType": "CallExpression",
    "ruleId": "no-implied-eval",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 35,
    "endLine": 243,
    "line": 243,
    "message": "Implied eval. Consider passing a function instead of a string.",
    "nodeType": "CallExpression",
    "ruleId": "no-implied-eval",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 36,
    "endLine": 244,
    "line": 244,
    "message": "Implied eval. Consider passing a function instead of a string.",
    "nodeType": "CallExpression",
    "ruleId": "no-implied-eval",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 27,
    "endLine": 247,
    "line": 247,
    "message": "Reserved name '__iterator__'.",
    "nodeType": "MemberExpression",
    "ruleId": "no-iterator",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 17,
    "endLine": 250,
    "line": 250,
    "message": "Reserved name '__iterator__'.",
    "nodeType": "MemberExpression",
    "ruleId": "no-iterator",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 3,
    "endLine": 253,
    "line": 253,
    "message": "Block is redundant.",
    "nodeType": "BlockStatement",
    "ruleId": "no-lone-blocks",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 256,
    "line": 254,
    "message": "Block is redundant.",
    "nodeType": "BlockStatement",
    "ruleId": "no-lone-blocks",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 29,
    "endLine": 261,
    "line": 261,
    "message": "Function declared in a loop contains unsafe references to variable(s) 'i'.",
    "messageId": "unsafeRefs",
    "nodeType": "FunctionDeclaration",
    "ruleId": "no-loop-func",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 47,
    "endLine": 267,
    "line": 267,
    "message": "Function declared in a loop contains unsafe references to variable(s) 'modifiedItem'.",
    "messageId": "unsafeRefs",
    "nodeType": "ArrowFunctionExpression",
    "ruleId": "no-loop-func",
    "severity": 2,
  },
  Object {
    "column": 25,
    "fix": Object {
      "range": Array [
        3987,
        3992,
      ],
      "text": " ",
    },
    "line": 272,
    "message": "Multiple spaces found before '='.",
    "nodeType": "Punctuator",
    "ruleId": "no-multi-spaces",
    "severity": 2,
  },
  Object {
    "column": 24,
    "endColumn": 19,
    "endLine": 276,
    "line": 275,
    "message": "Multiline support is limited to browsers supporting ES5 only.",
    "nodeType": "Literal",
    "ruleId": "no-multi-str",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 279,
    "line": 279,
    "message": "Do not use 'new' for side effects.",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-new",
    "severity": 2,
  },
  Object {
    "column": 22,
    "endColumn": 36,
    "endLine": 282,
    "line": 282,
    "message": "The Function constructor is eval.",
    "nodeType": "NewExpression",
    "ruleId": "no-new-func",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 30,
    "endLine": 285,
    "line": 285,
    "message": "Do not use String as a constructor.",
    "nodeType": "NewExpression",
    "ruleId": "no-new-wrappers",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 30,
    "endLine": 286,
    "line": 286,
    "message": "Do not use Number as a constructor.",
    "nodeType": "NewExpression",
    "ruleId": "no-new-wrappers",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 32,
    "endLine": 287,
    "line": 287,
    "message": "Do not use Boolean as a constructor.",
    "nodeType": "NewExpression",
    "ruleId": "no-new-wrappers",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 16,
    "endLine": 290,
    "line": 290,
    "message": "Octal literals should not be used.",
    "nodeType": "Literal",
    "ruleId": "no-octal",
    "severity": 2,
  },
  Object {
    "column": 22,
    "endColumn": 24,
    "endLine": 291,
    "line": 291,
    "message": "Octal literals should not be used.",
    "nodeType": "Literal",
    "ruleId": "no-octal",
    "severity": 2,
  },
  Object {
    "column": 21,
    "endColumn": 37,
    "endLine": 294,
    "line": 294,
    "message": "Don't use octal: '\\\\251'. Use '\\\\u....' instead.",
    "nodeType": "Literal",
    "ruleId": "no-octal-escape",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 6,
    "endLine": 298,
    "line": 298,
    "message": "Assignment to function parameter 'bar'.",
    "nodeType": "Identifier",
    "ruleId": "no-param-reassign",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 6,
    "endLine": 302,
    "line": 302,
    "message": "Assignment to function parameter 'bar'.",
    "nodeType": "Identifier",
    "ruleId": "no-param-reassign",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 14,
    "endLine": 306,
    "line": 306,
    "message": "The '__proto__' property is deprecated.",
    "nodeType": "MemberExpression",
    "ruleId": "no-proto",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 16,
    "endLine": 309,
    "line": 309,
    "message": "'window.isFinite' is restricted from being used. Please use Number.isFinite instead",
    "nodeType": "MemberExpression",
    "ruleId": "no-restricted-properties",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 13,
    "endLine": 310,
    "line": 310,
    "message": "'window.isNaN' is restricted from being used. Please use Number.isNaN instead",
    "nodeType": "MemberExpression",
    "ruleId": "no-restricted-properties",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 21,
    "endLine": 312,
    "line": 312,
    "message": "'__defineGetter__' is restricted from being used. Please use Object.defineProperty instead.",
    "nodeType": "MemberExpression",
    "ruleId": "no-restricted-properties",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 21,
    "endLine": 313,
    "line": 313,
    "message": "'__defineSetter__' is restricted from being used. Please use Object.defineProperty instead.",
    "nodeType": "MemberExpression",
    "ruleId": "no-restricted-properties",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 315,
    "line": 315,
    "message": "'Math.pow' is restricted from being used. Use the exponentiation operator (**) instead.",
    "nodeType": "MemberExpression",
    "ruleId": "no-restricted-properties",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 24,
    "endLine": 319,
    "line": 319,
    "message": "Return statement should not contain assignment.",
    "nodeType": "ReturnStatement",
    "ruleId": "no-return-assign",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 19,
    "endLine": 323,
    "line": 323,
    "message": "Return statement should not contain assignment.",
    "nodeType": "ReturnStatement",
    "ruleId": "no-return-assign",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 28,
    "endLine": 327,
    "line": 327,
    "message": "Return statement should not contain assignment.",
    "nodeType": "ReturnStatement",
    "ruleId": "no-return-assign",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 38,
    "endLine": 332,
    "line": 332,
    "message": "Redundant use of \`await\` on a return value.",
    "nodeType": "Identifier",
    "ruleId": "no-return-await",
    "severity": 2,
  },
  Object {
    "column": 17,
    "endColumn": 37,
    "endLine": 336,
    "line": 336,
    "message": "Script URL is a form of eval.",
    "nodeType": "Literal",
    "ruleId": "no-script-url",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 10,
    "endLine": 339,
    "line": 339,
    "message": "'foo' is assigned to itself.",
    "nodeType": "Identifier",
    "ruleId": "no-self-assign",
    "severity": 2,
  },
  Object {
    "column": 11,
    "endColumn": 12,
    "endLine": 341,
    "line": 341,
    "message": "'a' is assigned to itself.",
    "nodeType": "Identifier",
    "ruleId": "no-self-assign",
    "severity": 2,
  },
  Object {
    "column": 14,
    "endColumn": 15,
    "endLine": 341,
    "line": 341,
    "message": "'b' is assigned to itself.",
    "nodeType": "Identifier",
    "ruleId": "no-self-assign",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 21,
    "endLine": 343,
    "line": 343,
    "message": "'b' is assigned to itself.",
    "nodeType": "Identifier",
    "ruleId": "no-self-assign",
    "severity": 2,
  },
  Object {
    "column": 12,
    "endColumn": 13,
    "endLine": 345,
    "line": 345,
    "message": "'a' is assigned to itself.",
    "nodeType": "Identifier",
    "ruleId": "no-self-assign",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 34,
    "endLine": 349,
    "line": 349,
    "message": "Comparing to itself is potentially pointless.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-self-compare",
    "severity": 2,
  },
  Object {
    "column": 18,
    "line": 354,
    "message": "Unexpected use of comma operator.",
    "nodeType": "SequenceExpression",
    "ruleId": "no-sequences",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 358,
    "line": 358,
    "message": "Expected an error object to be thrown.",
    "messageId": "object",
    "nodeType": "ThrowStatement",
    "ruleId": "no-throw-literal",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 17,
    "endLine": 359,
    "line": 359,
    "message": "Do not throw undefined.",
    "messageId": "undef",
    "nodeType": "ThrowStatement",
    "ruleId": "no-throw-literal",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 12,
    "endLine": 360,
    "line": 360,
    "message": "Expected an error object to be thrown.",
    "messageId": "object",
    "nodeType": "ThrowStatement",
    "ruleId": "no-throw-literal",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 363,
    "line": 363,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 8,
    "endLine": 364,
    "line": 364,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 365,
    "line": 365,
    "message": "Expected an assignment or function call and instead saw an expression.",
    "nodeType": "ExpressionStatement",
    "ruleId": "no-unused-expressions",
    "severity": 2,
  },
  Object {
    "column": 23,
    "line": 368,
    "message": "Unexpected string concatenation of literals.",
    "nodeType": "BinaryExpression",
    "ruleId": "no-useless-concat",
    "severity": 2,
  },
  Object {
    "column": 22,
    "endColumn": 23,
    "endLine": 371,
    "line": 371,
    "message": "Unnecessary escape character: \\\\'.",
    "nodeType": "Literal",
    "ruleId": "no-useless-escape",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 372,
    "line": 372,
    "message": "Unnecessary escape character: \\\\\\".",
    "nodeType": "Literal",
    "ruleId": "no-useless-escape",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 373,
    "line": 373,
    "message": "Unnecessary escape character: \\\\#.",
    "nodeType": "Literal",
    "ruleId": "no-useless-escape",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 374,
    "line": 374,
    "message": "Unnecessary escape character: \\\\e.",
    "nodeType": "Literal",
    "ruleId": "no-useless-escape",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 375,
    "line": 375,
    "message": "Unnecessary escape character: \\\\\\".",
    "nodeType": "TemplateElement",
    "ruleId": "no-useless-escape",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 376,
    "line": 376,
    "message": "Unnecessary escape character: \\\\\\".",
    "nodeType": "TemplateElement",
    "ruleId": "no-useless-escape",
    "severity": 2,
  },
  Object {
    "column": 26,
    "endColumn": 27,
    "endLine": 376,
    "line": 376,
    "message": "Unnecessary escape character: \\\\\\".",
    "nodeType": "TemplateElement",
    "ruleId": "no-useless-escape",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 377,
    "line": 377,
    "message": "Unnecessary escape character: \\\\#.",
    "nodeType": "TemplateElement",
    "ruleId": "no-useless-escape",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 378,
    "line": 378,
    "message": "Unnecessary escape character: \\\\!.",
    "nodeType": "Literal",
    "ruleId": "no-useless-escape",
    "severity": 2,
  },
  Object {
    "column": 18,
    "endColumn": 19,
    "endLine": 379,
    "line": 379,
    "message": "Unnecessary escape character: \\\\@.",
    "nodeType": "Literal",
    "ruleId": "no-useless-escape",
    "severity": 2,
  },
  Object {
    "column": 31,
    "endColumn": 38,
    "endLine": 382,
    "fix": Object {
      "range": Array [
        5665,
        5704,
      ],
      "text": "function uselessReturnOne() {  }",
    },
    "line": 382,
    "message": "Unnecessary return statement.",
    "nodeType": "ReturnStatement",
    "ruleId": "no-useless-return",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 10,
    "endLine": 386,
    "fix": Object {
      "range": Array [
        5706,
        5764,
      ],
      "text": "function uselessReturnTwo() {
  doSomething();
  
}",
    },
    "line": 386,
    "message": "Unnecessary return statement.",
    "nodeType": "ReturnStatement",
    "ruleId": "no-useless-return",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 390,
    "line": 390,
    "message": "Expected 'undefined' and instead saw 'void'.",
    "nodeType": "UnaryExpression",
    "ruleId": "no-void",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 9,
    "endLine": 393,
    "line": 393,
    "message": "Unexpected 'todo' comment.",
    "nodeType": "Line",
    "ruleId": "no-warning-comments",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 10,
    "endLine": 394,
    "line": 394,
    "message": "Unexpected 'fixme' comment.",
    "nodeType": "Line",
    "ruleId": "no-warning-comments",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 8,
    "endLine": 395,
    "line": 395,
    "message": "Unexpected 'fix' comment.",
    "nodeType": "Line",
    "ruleId": "no-warning-comments",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 8,
    "endLine": 396,
    "line": 396,
    "message": "Unexpected 'xxx' comment.",
    "nodeType": "Line",
    "ruleId": "no-warning-comments",
    "severity": 1,
  },
  Object {
    "column": 1,
    "endColumn": 2,
    "endLine": 401,
    "line": 399,
    "message": "Unexpected use of 'with' statement.",
    "nodeType": "WithStatement",
    "ruleId": "no-with",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 23,
    "endLine": 404,
    "line": 404,
    "message": "Expected the Promise rejection reason to be an Error.",
    "nodeType": "CallExpression",
    "ruleId": "prefer-promise-reject-errors",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 13,
    "endLine": 407,
    "line": 407,
    "message": "Expected the Promise rejection reason to be an Error.",
    "nodeType": "CallExpression",
    "ruleId": "prefer-promise-reject-errors",
    "severity": 2,
  },
  Object {
    "column": 20,
    "endColumn": 35,
    "endLine": 411,
    "line": 411,
    "message": "Missing radix parameter.",
    "nodeType": "CallExpression",
    "ruleId": "radix",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 35,
    "endLine": 412,
    "line": 412,
    "message": "Missing radix parameter.",
    "nodeType": "CallExpression",
    "ruleId": "radix",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 38,
    "endLine": 413,
    "line": 413,
    "message": "Invalid radix parameter.",
    "nodeType": "CallExpression",
    "ruleId": "radix",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 26,
    "endLine": 414,
    "line": 414,
    "message": "Missing parameters.",
    "nodeType": "CallExpression",
    "ruleId": "radix",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 27,
    "endLine": 417,
    "line": 417,
    "message": "All 'var' declarations must be at the top of the function scope.",
    "messageId": "top",
    "nodeType": "VariableDeclaration",
    "ruleId": "vars-on-top",
    "severity": 2,
  },
  Object {
    "column": 2,
    "endColumn": 18,
    "endLine": 420,
    "fix": Object {
      "range": Array [
        6258,
        6262,
      ],
      "text": ") ()",
    },
    "line": 420,
    "message": "Wrap only the function expression in parens.",
    "messageId": "wrapExpression",
    "nodeType": "CallExpression",
    "ruleId": "wrap-iife",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 18,
    "endLine": 423,
    "fix": Object {
      "range": Array [
        6277,
        6290,
      ],
      "text": "flag === true",
    },
    "line": 423,
    "message": "Expected literal to be on the right side of ===.",
    "messageId": "expected",
    "nodeType": "BinaryExpression",
    "ruleId": "yoda",
    "severity": 2,
  },
]
`;

exports[`ESLint best practices should pass 1`] = `Array []`;
